postgresql:
  auth:
    username: keycloak
    password: keycloak
    database: keycloak
extraEnvVars:
  - name: KEYCLOAK_EXTRA_ARGS
    value: "--import-realm"
  - name: KC_HOSTNAME_URL
    value: https://keycloak.onet.bigtree.space
extraVolumes:
  - name: import
    configMap:
      name: impress-keycloak
extraVolumeMounts:
  - name: import
    mountPath: /opt/bitnami/keycloak/data/import/
auth:
  adminUser: su
  adminPassword: su
proxy: edge
ingress:
  enabled: true
  hostname: keycloak.onet.bigtree.space
  annotations: 
    cert-manager.io/cluster-issuer: "letsencrypt"
  extraTls:
  - hosts:
      - keycloak.onet.bigtree.space
    secretName: keycloak-tls
extraDeploy:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: impress-keycloak
  data:
    meet.json: |-
      {
        "id": "87279558-1851-46af-90c2-d49bac511644",
        "realm": "meet",
        "notBefore": 0,
        "defaultSignatureAlgorithm": "RS256",
        "revokeRefreshToken": "false",
        "refreshTokenMaxReuse": 0,
        "accessTokenLifespan": 300,
        "accessTokenLifespanForImplicitFlow": 900,
        "ssoSessionIdleTimeout": 1800,
        "ssoSessionMaxLifespan": 36000,
        "ssoSessionIdleTimeoutRememberMe": 0,
        "ssoSessionMaxLifespanRememberMe": 0,
        "offlineSessionIdleTimeout": 2592000,
        "offlineSessionMaxLifespanEnabled": "false",
        "offlineSessionMaxLifespan": 5184000,
        "clientSessionIdleTimeout": 0,
        "clientSessionMaxLifespan": 0,
        "clientOfflineSessionIdleTimeout": 0,
        "clientOfflineSessionMaxLifespan": 0,
        "accessCodeLifespan": 60,
        "accessCodeLifespanUserAction": 300,
        "accessCodeLifespanLogin": 1800,
        "actionTokenGeneratedByAdminLifespan": 43200,
        "actionTokenGeneratedByUserLifespan": 300,
        "oauth2DeviceCodeLifespan": 600,
        "oauth2DevicePollingInterval": 5,
        "enabled": "true",
        "sslRequired": "external",
        "registrationAllowed": "true",
        "registrationEmailAsUsername": "false",
        "rememberMe": "true",
        "verifyEmail": "false",
        "loginWithEmailAllowed": "true",
        "duplicateEmailsAllowed": "false",
        "resetPasswordAllowed": "true",
        "editUsernameAllowed": "false",
        "bruteForceProtected": "false",
        "permanentLockout": "false",
        "maxFailureWaitSeconds": 900,
        "minimumQuickLoginWaitSeconds": 60,
        "waitIncrementSeconds": 60,
        "quickLoginCheckMilliSeconds": 1000,
        "maxDeltaTimeSeconds": 43200,
        "failureFactor": 30,
        "users": [
          {
            "username": "meet",
            "email": "meet@meet.world",
            "firstName": "John",
            "lastName": "Doe",
            "enabled": "true",
            "credentials": [
              {
                "type": "password",
                "value": "meet"
              }
            ],
            "realmRoles": [
              "user"
            ]
          },
          {
            "username": "user-e2e-chromium",
            "email": "user@chromium.e2e",
            "firstName": "E2E",
            "lastName": "Chromium",
            "enabled": "true",
            "credentials": [
              {
                "type": "password",
                "value": "password-e2e-chromium"
              }
            ],
            "realmRoles": [
              "user"
            ]
          },
          {
            "username": "user-e2e-webkit",
            "email": "user@webkit.e2e",
            "firstName": "E2E",
            "lastName": "Webkit",
            "enabled": "true",
            "credentials": [
              {
                "type": "password",
                "value": "password-e2e-webkit"
              }
            ],
            "realmRoles": [
              "user"
            ]
          },
          {
            "username": "user-e2e-firefox",
            "email": "user@firefox.e2e",
            "firstName": "E2E",
            "lastName": "Firefox",
            "enabled": "true",
            "credentials": [
              {
                "type": "password",
                "value": "password-e2e-firefox"
              }
            ],
            "realmRoles": [
              "user"
            ]
          }
        ],
        "roles": {
          "realm": [
            {
              "id": "f6694c06-f06b-4654-ac83-a819ea24b145",
              "name": "uma_authorization",
              "description": "${role_uma_authorization}",
              "composite": "false",
              "clientRole": "false",
              "containerId": "ccf4fd40-4286-474d-854a-4714282a8bec",
              "attributes": {}
            },
            {
              "id": "ca153296-46ff-4f94-928f-e5c3c5944d22",
              "name": "default-roles-meet",
              "description": "${role_default-roles}",
              "composite": "true",
              "composites": {
                "realm": [
                  "offline_access",
                  "uma_authorization"
                ],
                "client": {
                  "account": [
                    "view-profile",
                    "manage-account"
                  ]
                }
              },
              "clientRole": "false",
              "containerId": "ccf4fd40-4286-474d-854a-4714282a8bec",
              "attributes": {}
            },
            {
              "id": "f73ee4f0-9b59-4332-bf8c-6b5ff9d87a2c",
              "name": "offline_access",
              "description": "${role_offline-access}",
              "composite": "false",
              "clientRole": "false",
              "containerId": "ccf4fd40-4286-474d-854a-4714282a8bec",
              "attributes": {}
            }
          ],
          "client": {
            "realm-management": [
              {
                "id": "072b8833-b029-4513-8108-0645c41aec68",
                "name": "impersonation",
                "description": "${role_impersonation}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "115d24b1-3438-4a1f-b131-85bf4fdc592a",
                "name": "view-authorization",
                "description": "${role_view-authorization}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "7dd75ac6-842c-45c6-912a-f323b147d4d3",
                "name": "manage-authorization",
                "description": "${role_manage-authorization}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "bc3c9111-7e3c-4ddc-a3be-9db6abe13613",
                "name": "create-client",
                "description": "${role_create-client}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "22702353-8e84-45bd-9e04-8ebf1022622a",
                "name": "view-events",
                "description": "${role_view-events}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "96c09c90-5491-446d-b3db-1aace0fa9781",
                "name": "manage-identity-providers",
                "description": "${role_manage-identity-providers}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "3e3e3fc6-46cb-480a-922b-82119c4e33b4",
                "name": "manage-clients",
                "description": "${role_manage-clients}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "cc7003d8-dbe9-41c0-b4be-6bee519020f0",
                "name": "realm-admin",
                "description": "${role_realm-admin}",
                "composite": "true",
                "composites": {
                  "client": {
                    "realm-management": [
                      "impersonation",
                      "view-authorization",
                      "manage-authorization",
                      "create-client",
                      "view-events",
                      "manage-identity-providers",
                      "manage-clients",
                      "view-identity-providers",
                      "query-users",
                      "manage-users",
                      "view-clients",
                      "view-users",
                      "manage-events",
                      "view-realm",
                      "query-realms",
                      "query-groups",
                      "manage-realm",
                      "query-clients"
                    ]
                  }
                },
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "cb0a4a03-5760-4576-834e-8276383563cf",
                "name": "view-identity-providers",
                "description": "${role_view-identity-providers}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "c6a90711-01d1-4a25-be61-a77e51094c9e",
                "name": "query-users",
                "description": "${role_query-users}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "81436042-5178-49b0-b201-6825aa7788ad",
                "name": "manage-users",
                "description": "${role_manage-users}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "ac35b062-d60f-44fa-8ae7-0991e9373658",
                "name": "view-clients",
                "description": "${role_view-clients}",
                "composite": "true",
                "composites": {
                  "client": {
                    "realm-management": [
                      "query-clients"
                    ]
                  }
                },
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "9d3e363c-5d85-4403-8a0d-9f0d6bf10344",
                "name": "manage-events",
                "description": "${role_manage-events}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "ee531aa4-283b-4f17-9b78-d8f1ed700f2b",
                "name": "view-users",
                "description": "${role_view-users}",
                "composite": "true",
                "composites": {
                  "client": {
                    "realm-management": [
                      "query-users",
                      "query-groups"
                    ]
                  }
                },
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "24c234f1-9253-4d9c-b822-5c9b507d38f4",
                "name": "query-realms",
                "description": "${role_query-realms}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "d484796e-54f0-47f1-9d48-cb93cff6bdd7",
                "name": "view-realm",
                "description": "${role_view-realm}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "69852dab-0879-4613-9752-6ef3b7709552",
                "name": "query-groups",
                "description": "${role_query-groups}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "3599f596-38a6-4333-9010-00ddd87988d2",
                "name": "manage-realm",
                "description": "${role_manage-realm}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "2c2f9830-c99f-454d-9f58-f293fda00cef",
                "name": "query-clients",
                "description": "${role_query-clients}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              }
            ],
            "security-admin-console": [],
            "admin-cli": [],
            "account-console": [],
            "broker": [
              {
                "id": "dbf7a4a2-bc3c-4b75-a9cb-3d92d78ac65b",
                "name": "read-token",
                "description": "${role_read-token}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "41dd8f26-46c2-471a-859e-01886f972ff9",
                "attributes": {}
              }
            ],
            "meet": [],
            "account": [
              {
                "id": "962a8204-42eb-4c2f-9460-d3d6a1227fd7",
                "name": "manage-consent",
                "description": "${role_manage-consent}",
                "composite": "true",
                "composites": {
                  "client": {
                    "account": [
                      "view-consent"
                    ]
                  }
                },
                "clientRole": "true",
                "containerId": "06721011-1061-4ca7-944f-be2a20719e20",
                "attributes": {}
              },
              {
                "id": "cbdb0b5d-83f4-47da-a08b-a752150ade66",
                "name": "view-groups",
                "description": "${role_view-groups}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "06721011-1061-4ca7-944f-be2a20719e20",
                "attributes": {}
              },
              {
                "id": "1b4b04eb-9437-4a35-916d-76d9e13dd86b",
                "name": "view-profile",
                "description": "${role_view-profile}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "06721011-1061-4ca7-944f-be2a20719e20",
                "attributes": {}
              },
              {
                "id": "de612300-7eed-47ba-a32c-ab2a732ae8ed",
                "name": "manage-account",
                "description": "${role_manage-account}",
                "composite": "true",
                "composites": {
                  "client": {
                    "account": [
                      "manage-account-links"
                    ]
                  }
                },
                "clientRole": "true",
                "containerId": "06721011-1061-4ca7-944f-be2a20719e20",
                "attributes": {}
              },
              {
                "id": "6dbcecb8-bac5-4278-a9ca-f9052e92c6fd",
                "name": "manage-account-links",
                "description": "${role_manage-account-links}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "06721011-1061-4ca7-944f-be2a20719e20",
                "attributes": {}
              },
              {
                "id": "780dfe78-bd25-4279-85e9-680cdac3d172",
                "name": "view-applications",
                "description": "${role_view-applications}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "06721011-1061-4ca7-944f-be2a20719e20",
                "attributes": {}
              },
              {
                "id": "a7eb8f05-3006-4b56-a04f-56415e476493",
                "name": "view-consent",
                "description": "${role_view-consent}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "06721011-1061-4ca7-944f-be2a20719e20",
                "attributes": {}
              },
              {
                "id": "aa168ea9-c708-4aac-a845-4058efd17758",
                "name": "delete-account",
                "description": "${role_delete-account}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "06721011-1061-4ca7-944f-be2a20719e20",
                "attributes": {}
              }
            ]
          }
        },
        "groups": [],
        "defaultRole": {
          "id": "e5407106-31a5-4d4d-8c0a-b7e737991fc1",
          "name": "default-roles-meet",
          "description": "${role_default-roles}",
          "composite": "true",
          "clientRole": "false",
          "containerId": "ccf4fd40-4286-474d-854a-4714282a8bec"
        },
        "requiredCredentials": [
          "password"
        ],
        "otpPolicyType": "totp",
        "otpPolicyAlgorithm": "HmacSHA1",
        "otpPolicyInitialCounter": 0,
        "otpPolicyDigits": 6,
        "otpPolicyLookAheadWindow": 1,
        "otpPolicyPeriod": 30,
        "otpPolicyCodeReusable": "false",
        "otpSupportedApplications": [
          "totpAppGoogleName",
          "totpAppFreeOTPName"
        ],
        "webAuthnPolicyRpEntityName": "keycloak",
        "webAuthnPolicySignatureAlgorithms": [
          "ES256"
        ],
        "webAuthnPolicyRpId": "",
        "webAuthnPolicyAttestationConveyancePreference": "not specified",
        "webAuthnPolicyAuthenticatorAttachment": "not specified",
        "webAuthnPolicyRequireResidentKey": "not specified",
        "webAuthnPolicyUserVerificationRequirement": "not specified",
        "webAuthnPolicyCreateTimeout": 0,
        "webAuthnPolicyAvoidSameAuthenticatorRegister": "false",
        "webAuthnPolicyAcceptableAaguids": [],
        "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
        "webAuthnPolicyPasswordlessSignatureAlgorithms": [
          "ES256"
        ],
        "webAuthnPolicyPasswordlessRpId": "",
        "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
        "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
        "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
        "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
        "webAuthnPolicyPasswordlessCreateTimeout": 0,
        "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": "false",
        "webAuthnPolicyPasswordlessAcceptableAaguids": [],
        "scopeMappings": [
          {
            "clientScope": "offline_access",
            "roles": [
              "offline_access"
            ]
          }
        ],
        "clientScopeMappings": {
          "account": [
            {
              "client": "account-console",
              "roles": [
                "manage-account",
                "view-groups"
              ]
            }
          ]
        },
        "clients": [
          {
            "id": "f367b93a-56d7-46a1-b6c6-7f8d3d031d36",
            "clientId": "account",
            "name": "${client_account}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/meet/account/",
            "surrogateAuthRequired": "false",
            "enabled": "true",
            "alwaysDisplayInConsole": "false",
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "/realms/meet/account/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": "false",
            "consentRequired": "false",
            "standardFlowEnabled": "true",
            "implicitFlowEnabled": "false",
            "directAccessGrantsEnabled": "false",
            "serviceAccountsEnabled": "false",
            "publicClient": "true",
            "frontchannelLogout": "false",
            "protocol": "openid-connect",
            "attributes": {
              "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": "false",
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "089f119c-e99f-49b7-b0bf-a200bff521d3",
            "clientId": "account-console",
            "name": "${client_account-console}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/meet/account/",
            "surrogateAuthRequired": "false",
            "enabled": "true",
            "alwaysDisplayInConsole": "false",
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "/realms/meet/account/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": "false",
            "consentRequired": "false",
            "standardFlowEnabled": "true",
            "implicitFlowEnabled": "false",
            "directAccessGrantsEnabled": "false",
            "serviceAccountsEnabled": "false",
            "publicClient": "true",
            "frontchannelLogout": "false",
            "protocol": "openid-connect",
            "attributes": {
              "post.logout.redirect.uris": "+",
              "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": "false",
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
              {
                "id": "d2f632a1-d139-4819-9d6c-78f5425ea153",
                "name": "audience resolve",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-audience-resolve-mapper",
                "consentRequired": "false",
                "config": {}
              }
            ],
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "af2be872-74f5-48d6-a72c-83ecf0f43cac",
            "clientId": "admin-cli",
            "name": "${client_admin-cli}",
            "surrogateAuthRequired": "false",
            "enabled": "true",
            "alwaysDisplayInConsole": "false",
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": "false",
            "consentRequired": "false",
            "standardFlowEnabled": "false",
            "implicitFlowEnabled": "false",
            "directAccessGrantsEnabled": "true",
            "serviceAccountsEnabled": "false",
            "publicClient": "true",
            "frontchannelLogout": "false",
            "protocol": "openid-connect",
            "attributes": {
              "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": "false",
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "4ef0e576-8125-4535-b448-9699249f6cd2",
            "clientId": "broker",
            "name": "${client_broker}",
            "surrogateAuthRequired": "false",
            "enabled": "true",
            "alwaysDisplayInConsole": "false",
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": "true",
            "consentRequired": "false",
            "standardFlowEnabled": "true",
            "implicitFlowEnabled": "false",
            "directAccessGrantsEnabled": "false",
            "serviceAccountsEnabled": "false",
            "publicClient": "false",
            "frontchannelLogout": "false",
            "protocol": "openid-connect",
            "attributes": {
              "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": "false",
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "c1fc291b-a1f3-49e6-aca9-a567aa014666",
            "clientId": "meet",
            "name": "",
            "description": "",
            "rootUrl": "",
            "adminUrl": "",
            "baseUrl": "",
            "surrogateAuthRequired": "false",
            "enabled": "true",
            "alwaysDisplayInConsole": "false",
            "clientAuthenticatorType": "client-secret",
            "secret": "ThisIsAnExampleKeyForDevPurposeOnly",
            "redirectUris": [
              "http://localhost:8070/*",
              "http://localhost:8071/*",
              "https://meet.onet.bigtree.space/*",
              "http://localhost:8088/*",
              "http://localhost:3000/*"
            ],
            "webOrigins": [
              "https://meet.onet.bigtree.space",
              "http://localhost:8088",
              "http://localhost:8070",
              "http://localhost:3000"
            ],
            "notBefore": 0,
            "bearerOnly": "false",
            "consentRequired": "false",
            "standardFlowEnabled": "true",
            "implicitFlowEnabled": "false",
            "directAccessGrantsEnabled": "false",
            "serviceAccountsEnabled": "false",
            "publicClient": "false",
            "frontchannelLogout": "true",
            "protocol": "openid-connect",
            "attributes": {
              "access.token.lifespan": "-1",
              "client.secret.creation.time": "1707820779",
              "user.info.response.signature.alg": "RS256",
              "post.logout.redirect.uris": "http://localhost:8070/*##https://meet.onet.bigtree.space/*##http://localhost:3000/*",
              "oauth2.device.authorization.grant.enabled": "false",
              "use.jwks.url": "false",
              "backchannel.logout.revoke.offline.tokens": "false",
              "use.refresh.tokens": "true",
              "tls-client-certificate-bound-access-tokens": "false",
              "oidc.ciba.grant.enabled": "false",
              "backchannel.logout.session.required": "true",
              "client_credentials.use_refresh_token": "false",
              "acr.loa.map": "{}",
              "require.pushed.authorization.requests": "false",
              "display.on.consent.screen": "false",
              "client.session.idle.timeout": "-1",
              "token.response.type.bearer.lower-case": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": "true",
            "nodeReRegistrationTimeout": -1,
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "ca94971b-7e70-49c5-99b2-e8301e0e1051",
            "clientId": "realm-management",
            "name": "${client_realm-management}",
            "surrogateAuthRequired": "false",
            "enabled": "true",
            "alwaysDisplayInConsole": "false",
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": "true",
            "consentRequired": "false",
            "standardFlowEnabled": "true",
            "implicitFlowEnabled": "false",
            "directAccessGrantsEnabled": "false",
            "serviceAccountsEnabled": "false",
            "publicClient": "false",
            "frontchannelLogout": "false",
            "protocol": "openid-connect",
            "attributes": {
              "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": "false",
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "91ce425d-59a8-40ef-804f-2918ef7151c4",
            "clientId": "security-admin-console",
            "name": "${client_security-admin-console}",
            "rootUrl": "${authAdminUrl}",
            "baseUrl": "/admin/meet/console/",
            "surrogateAuthRequired": "false",
            "enabled": "true",
            "alwaysDisplayInConsole": "false",
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "/admin/meet/console/*"
            ],
            "webOrigins": [
              "+"
            ],
            "notBefore": 0,
            "bearerOnly": "false",
            "consentRequired": "false",
            "standardFlowEnabled": "true",
            "implicitFlowEnabled": "false",
            "directAccessGrantsEnabled": "false",
            "serviceAccountsEnabled": "false",
            "publicClient": "true",
            "frontchannelLogout": "false",
            "protocol": "openid-connect",
            "attributes": {
              "post.logout.redirect.uris": "+",
              "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": "false",
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
              {
                "id": "5f136368-6209-4c09-aa52-5075284346c0",
                "name": "locale",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "locale",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "locale",
                  "jsonType.label": "String"
                }
              }
            ],
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          }
        ],
        "clientScopes": [
          {
            "id": "ede88805-b845-4e10-85b7-47376852b1f0",
            "name": "roles",
            "description": "OpenID Connect scope for add user roles to the access token",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "false",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${rolesScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "559c56e5-36ba-405e-87cd-8ddef9fd3293",
                "name": "client roles",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-client-role-mapper",
                "consentRequired": "false",
                "config": {
                  "user.attribute": "foo",
                  "access.token.claim": "true",
                  "claim.name": "resource_access.${client_id}.roles",
                  "jsonType.label": "String",
                  "multivalued": "true"
                }
              },
              {
                "id": "f2dda24f-5b3b-44dd-9a95-abfe927a2042",
                "name": "audience resolve",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-audience-resolve-mapper",
                "consentRequired": "false",
                "config": {}
              },
              {
                "id": "729d9a13-b59c-4d81-ac45-5ed8c3dc087e",
                "name": "realm roles",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-realm-role-mapper",
                "consentRequired": "false",
                "config": {
                  "user.attribute": "foo",
                  "access.token.claim": "true",
                  "claim.name": "realm_access.roles",
                  "jsonType.label": "String",
                  "multivalued": "true"
                }
              }
            ]
          },
          {
            "id": "30b29a03-0ef4-4402-9383-9a957909c5d4",
            "name": "role_list",
            "description": "SAML role list",
            "protocol": "saml",
            "attributes": {
              "consent.screen.text": "${samlRoleListScopeConsentText}",
              "display.on.consent.screen": "true"
            },
            "protocolMappers": [
              {
                "id": "c1e044a0-b8a6-4735-82c4-8d89e9bb6551",
                "name": "role list",
                "protocol": "saml",
                "protocolMapper": "saml-role-list-mapper",
                "consentRequired": "false",
                "config": {
                  "single": "false",
                  "attribute.nameformat": "Basic",
                  "attribute.name": "Role"
                }
              }
            ]
          },
          {
            "id": "f9bea823-f922-461e-8948-859c8d48fbed",
            "name": "acr",
            "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "false",
              "display.on.consent.screen": "false"
            },
            "protocolMappers": [
              {
                "id": "100e17d0-5571-47a6-a2c9-b39df1d40e1f",
                "name": "acr loa level",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-acr-mapper",
                "consentRequired": "false",
                "config": {
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "userinfo.token.claim": "true"
                }
              }
            ]
          },
          {
            "id": "0e859384-47dc-456b-a81c-b371aa5602f4",
            "name": "offline_access",
            "description": "OpenID Connect built-in scope: offline_access",
            "protocol": "openid-connect",
            "attributes": {
              "consent.screen.text": "${offlineAccessScopeConsentText}",
              "display.on.consent.screen": "true"
            }
          },
          {
            "id": "a7c8d4bf-1149-4fcf-9dc9-39cf199ef0d0",
            "name": "address",
            "description": "OpenID Connect built-in scope: address",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${addressScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "f1ae2432-b0fc-445b-98f2-c2f8c904bc79",
                "name": "address",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-address-mapper",
                "consentRequired": "false",
                "config": {
                  "user.attribute.formatted": "formatted",
                  "user.attribute.country": "country",
                  "user.attribute.postal_code": "postal_code",
                  "userinfo.token.claim": "true",
                  "user.attribute.street": "street",
                  "id.token.claim": "true",
                  "user.attribute.region": "region",
                  "access.token.claim": "true",
                  "user.attribute.locality": "locality"
                }
              }
            ]
          },
          {
            "id": "355081ce-7ef9-43a5-85da-5ba9ebc8505a",
            "name": "web-origins",
            "description": "OpenID Connect scope for add allowed web origins to the access token",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "false",
              "display.on.consent.screen": "false",
              "consent.screen.text": ""
            },
            "protocolMappers": [
              {
                "id": "eafbf74a-c165-413f-bcad-6afd7cb8ca74",
                "name": "allowed web origins",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-allowed-origins-mapper",
                "consentRequired": "false",
                "config": {}
              }
            ]
          },
          {
            "id": "bc158a44-ff6b-4abd-9a9b-745dd3dda5e9",
            "name": "profile",
            "description": "OpenID Connect built-in scope: profile",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${profileScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "1a926ea4-7ebb-4199-b812-5c85afbde21a",
                "name": "profile",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "profile",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "profile",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "40a53527-082e-4c29-a774-fbbf130b792b",
                "name": "gender",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "gender",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "gender",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "c0dd0527-91dd-4c85-a1d9-36b7bf44b3d3",
                "name": "zoneinfo",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "zoneinfo",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "zoneinfo",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "e23015c7-0662-4189-8519-cb5664554bf4",
                "name": "updated at",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "updatedAt",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "updated_at",
                  "jsonType.label": "long"
                }
              },
              {
                "id": "6ac78a0c-6851-4113-bef7-d2e16dbe3bf6",
                "name": "username",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "username",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "preferred_username",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "d72256ae-dc14-425d-9885-737c408e05a5",
                "name": "birthdate",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "birthdate",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "birthdate",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "2618ef65-3e81-49e6-b801-de7db385cd04",
                "name": "first name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "firstName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "first_name",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "e13e4352-4de7-48cd-8337-ca00e813c013",
                "name": "nickname",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "nickname",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "nickname",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "3189dedb-5523-4b51-8cd0-60fe34df24e3",
                "name": "last name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "lastName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "last_name",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "6f39e765-94f0-450e-883f-4d64bf0f5d90",
                "name": "middle name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "middleName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "middle_name",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "b7c0ffd6-3a52-4319-a8a8-b131a50f09da",
                "name": "full name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-full-name-mapper",
                "consentRequired": "false",
                "config": {
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "userinfo.token.claim": "true"
                }
              },
              {
                "id": "104fef19-e65f-466a-aa74-7e30671bb710",
                "name": "picture",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "picture",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "picture",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "02595989-dea5-4a78-b064-7f9d194c6feb",
                "name": "website",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "website",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "website",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "0634bb1a-37d6-4d3c-a576-595a315c54bc",
                "name": "locale",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "locale",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "locale",
                  "jsonType.label": "String"
                }
              }
            ]
          },
          {
            "id": "2637eb63-7d7a-4ce4-bd0f-ae15482c77ea",
            "name": "microprofile-jwt",
            "description": "Microprofile - JWT built-in scope",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "false"
            },
            "protocolMappers": [
              {
                "id": "c7751a6d-0bdc-4893-a09c-7fda8eaae2a5",
                "name": "upn",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "username",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "upn",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "d4132709-9cf1-48f7-8368-98eb71bcc4f2",
                "name": "groups",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-realm-role-mapper",
                "consentRequired": "false",
                "config": {
                  "multivalued": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "foo",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "groups",
                  "jsonType.label": "String"
                }
              }
            ]
          },
          {
            "id": "f5b4c450-0ebb-4e4e-8d6b-e27e31d3da0b",
            "name": "phone",
            "description": "OpenID Connect built-in scope: phone",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${phoneScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "88c40343-9d44-464e-9dfb-56efebda3ab6",
                "name": "phone number",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "phoneNumber",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "phone_number",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "4a375b6b-1c2e-454f-bb7a-a86b8ca02a45",
                "name": "phone number verified",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "phoneNumberVerified",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "phone_number_verified",
                  "jsonType.label": "boolean"
                }
              }
            ]
          },
          {
            "id": "27244518-f322-4d67-af0e-1e4376a41141",
            "name": "email",
            "description": "OpenID Connect built-in scope: email",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${emailScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "d15e1527-4795-49d5-bf77-89c1787cf6df",
                "name": "email",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "email",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "email",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "b36aa9af-1202-41b4-8c06-75886ea36cd1",
                "name": "email verified",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "emailVerified",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "email_verified",
                  "jsonType.label": "boolean"
                }
              }
            ]
          }
        ],
        "defaultDefaultClientScopes": [
          "role_list",
          "profile",
          "email",
          "roles",
          "web-origins",
          "acr"
        ],
        "defaultOptionalClientScopes": [
          "offline_access",
          "address",
          "phone",
          "microprofile-jwt"
        ],
        "browserSecurityHeaders": {
          "contentSecurityPolicyReportOnly": "",
          "xContentTypeOptions": "nosniff",
          "xRobotsTag": "none",
          "xFrameOptions": "SAMEORIGIN",
          "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
          "xXSSProtection": "1; mode=block",
          "strictTransportSecurity": "max-age=31536000; includeSubDomains"
        },
        "smtpServer": {},
        "eventsEnabled": "false",
        "eventsListeners": [
          "jboss-logging"
        ],
        "enabledEventTypes": [],
        "adminEventsEnabled": "false",
        "adminEventsDetailsEnabled": "false",
        "identityProviders": [],
        "identityProviderMappers": [],
        "components": {
          "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
            {
              "id": "8c6b61d8-54ef-4fd9-a0d1-8ed329d561c2",
              "name": "Consent Required",
              "providerId": "consent-required",
              "subType": "anonymous",
              "subComponents": {},
              "config": {}
            },
            {
              "id": "790c5756-3316-450f-abd9-3f926ee6b72a",
              "name": "Allowed Client Scopes",
              "providerId": "allowed-client-templates",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "allow-default-scopes": [
                  "true"
                ]
              }
            },
            {
              "id": "d25301f9-2864-41b6-8f7e-6863af5f0057",
              "name": "Max Clients Limit",
              "providerId": "max-clients",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "max-clients": [
                  "200"
                ]
              }
            },
            {
              "id": "173b1919-4ed3-454f-9dcb-999c1655832f",
              "name": "Allowed Client Scopes",
              "providerId": "allowed-client-templates",
              "subType": "authenticated",
              "subComponents": {},
              "config": {
                "allow-default-scopes": [
                  "true"
                ]
              }
            },
            {
              "id": "e892932f-fd3e-4119-b8f9-492be780d83f",
              "name": "Allowed Protocol Mapper Types",
              "providerId": "allowed-protocol-mappers",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "allowed-protocol-mapper-types": [
                  "saml-role-list-mapper",
                  "oidc-usermodel-attribute-mapper",
                  "saml-user-attribute-mapper",
                  "saml-user-property-mapper",
                  "oidc-sha256-pairwise-sub-mapper",
                  "oidc-full-name-mapper",
                  "oidc-address-mapper",
                  "oidc-usermodel-property-mapper"
                ]
              }
            },
            {
              "id": "ef01b5fa-f531-431a-b039-dbfc17c645fa",
              "name": "Full Scope Disabled",
              "providerId": "scope",
              "subType": "anonymous",
              "subComponents": {},
              "config": {}
            },
            {
              "id": "5962d7d2-f67b-4bfb-831e-2f566b098452",
              "name": "Allowed Protocol Mapper Types",
              "providerId": "allowed-protocol-mappers",
              "subType": "authenticated",
              "subComponents": {},
              "config": {
                "allowed-protocol-mapper-types": [
                  "saml-user-property-mapper",
                  "saml-user-attribute-mapper",
                  "oidc-address-mapper",
                  "oidc-sha256-pairwise-sub-mapper",
                  "oidc-usermodel-property-mapper",
                  "oidc-full-name-mapper",
                  "saml-role-list-mapper",
                  "oidc-usermodel-attribute-mapper"
                ]
              }
            },
            {
              "id": "fad2eaff-c6c1-4f37-a2f4-d2ed0fb9a567",
              "name": "Trusted Hosts",
              "providerId": "trusted-hosts",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "host-sending-registration-request-must-match": [
                  "true"
                ],
                "client-uris-must-match": [
                  "true"
                ]
              }
            }
          ],
          "org.keycloak.userprofile.UserProfileProvider": [
            {
              "id": "ff9c2c58-da17-47af-b7e2-c715b5e28019",
              "providerId": "declarative-user-profile",
              "subComponents": {},
              "config": {}
            }
          ],
          "org.keycloak.keys.KeyProvider": [
            {
              "id": "e943313f-6802-4d1a-a74b-2e31a9f35500",
              "name": "aes-generated",
              "providerId": "aes-generated",
              "subComponents": {},
              "config": {
                "priority": [
                  "100"
                ]
              }
            },
            {
              "id": "b1c96578-e3b1-471e-83dd-68ae0b0b3f58",
              "name": "hmac-generated",
              "providerId": "hmac-generated",
              "subComponents": {},
              "config": {
                "priority": [
                  "100"
                ],
                "algorithm": [
                  "HS256"
                ]
              }
            },
            {
              "id": "8ff5c9b1-d5f2-4cfb-b14c-211abd17fc4e",
              "name": "rsa-enc-generated",
              "providerId": "rsa-enc-generated",
              "subComponents": {},
              "config": {
                "priority": [
                  "100"
                ],
                "algorithm": [
                  "RSA-OAEP"
                ]
              }
            },
            {
              "id": "808d89fb-7a59-4595-82c3-98f6f0d48527",
              "name": "rsa-generated",
              "providerId": "rsa-generated",
              "subComponents": {},
              "config": {
                "priority": [
                  "100"
                ]
              }
            }
          ]
        },
        "internationalizationEnabled": "false",
        "supportedLocales": [],
        "authenticationFlows": [
          {
            "id": "cc6af480-c9fb-4185-a114-a7b821baef65",
            "alias": "Account verification options",
            "description": "Method with which to verity the existing account",
            "providerId": "basic-flow",
            "topLevel": "false",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "idp-email-verification",
                "authenticatorFlow": "false",
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticatorFlow": "true",
                "requirement": "ALTERNATIVE",
                "priority": 20,
                "autheticatorFlow": "true",
                "flowAlias": "Verify Existing Account by Re-authentication",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "4dfa9393-b09f-43c3-af92-1103000548eb",
            "alias": "Authentication Options",
            "description": "Authentication options.",
            "providerId": "basic-flow",
            "topLevel": "false",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "basic-auth",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "basic-auth-otp",
                "authenticatorFlow": "false",
                "requirement": "DISABLED",
                "priority": 20,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "auth-spnego",
                "authenticatorFlow": "false",
                "requirement": "DISABLED",
                "priority": 30,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "fce83161-9a0c-400c-8386-b6511bc2ccfc",
            "alias": "Browser - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": "false",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "auth-otp-form",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "669a01f8-b7f1-4b40-a1a7-fe1e99427550",
            "alias": "Direct Grant - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": "false",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "direct-grant-validate-otp",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "7ecce716-b74c-4609-8e88-3bbf377a6c42",
            "alias": "First broker login - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": "false",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "auth-otp-form",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "abf9c983-4dd5-4c85-96af-e480cc20c7f6",
            "alias": "Handle Existing Account",
            "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
            "providerId": "basic-flow",
            "topLevel": "false",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "idp-confirm-link",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticatorFlow": "true",
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": "true",
                "flowAlias": "Account verification options",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "5144beb3-9bf8-4ec2-80fb-19cb6a7429be",
            "alias": "Reset - Conditional OTP",
            "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
            "providerId": "basic-flow",
            "topLevel": "false",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "reset-otp",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "ee9457a3-708e-47d2-b49e-edce93e27210",
            "alias": "User creation or linking",
            "description": "Flow for the existing/non-existing user alternatives",
            "providerId": "basic-flow",
            "topLevel": "false",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticatorConfig": "create unique user config",
                "authenticator": "idp-create-user-if-unique",
                "authenticatorFlow": "false",
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticatorFlow": "true",
                "requirement": "ALTERNATIVE",
                "priority": 20,
                "autheticatorFlow": "true",
                "flowAlias": "Handle Existing Account",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "01575d9c-f3d4-41d5-a15a-bfee772ccb4e",
            "alias": "Verify Existing Account by Re-authentication",
            "description": "Reauthentication of existing account",
            "providerId": "basic-flow",
            "topLevel": "false",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "idp-username-password-form",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticatorFlow": "true",
                "requirement": "CONDITIONAL",
                "priority": 20,
                "autheticatorFlow": "true",
                "flowAlias": "First broker login - Conditional OTP",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "fd4d90b8-617f-463e-ad2b-103273085feb",
            "alias": "browser",
            "description": "browser based authentication",
            "providerId": "basic-flow",
            "topLevel": "true",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "auth-cookie",
                "authenticatorFlow": "false",
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "auth-spnego",
                "authenticatorFlow": "false",
                "requirement": "DISABLED",
                "priority": 20,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "identity-provider-redirector",
                "authenticatorFlow": "false",
                "requirement": "ALTERNATIVE",
                "priority": 25,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticatorFlow": "true",
                "requirement": "ALTERNATIVE",
                "priority": 30,
                "autheticatorFlow": "true",
                "flowAlias": "forms",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "283e7039-e25c-4021-acf2-ca26d82174c7",
            "alias": "clients",
            "description": "Base authentication for clients",
            "providerId": "client-flow",
            "topLevel": "true",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "client-secret",
                "authenticatorFlow": "false",
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "client-jwt",
                "authenticatorFlow": "false",
                "requirement": "ALTERNATIVE",
                "priority": 20,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "client-secret-jwt",
                "authenticatorFlow": "false",
                "requirement": "ALTERNATIVE",
                "priority": 30,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "client-x509",
                "authenticatorFlow": "false",
                "requirement": "ALTERNATIVE",
                "priority": 40,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "4db6b72b-a857-4256-99ba-c6c7fe5de988",
            "alias": "direct grant",
            "description": "OpenID Connect Resource Owner Grant",
            "providerId": "basic-flow",
            "topLevel": "true",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "direct-grant-validate-username",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "direct-grant-validate-password",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticatorFlow": "true",
                "requirement": "CONDITIONAL",
                "priority": 30,
                "autheticatorFlow": "true",
                "flowAlias": "Direct Grant - Conditional OTP",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "20b316b1-e03a-48c6-8c53-ed60bfd6fe93",
            "alias": "docker auth",
            "description": "Used by Docker clients to authenticate against the IDP",
            "providerId": "basic-flow",
            "topLevel": "true",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "docker-http-basic-authenticator",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "3722a71a-e940-429e-9803-7ecc53b2db1e",
            "alias": "first broker login",
            "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
            "providerId": "basic-flow",
            "topLevel": "true",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticatorConfig": "review profile config",
                "authenticator": "idp-review-profile",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticatorFlow": "true",
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": "true",
                "flowAlias": "User creation or linking",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "36cd747e-cc70-4029-bb15-16e3f7436eb1",
            "alias": "forms",
            "description": "Username, password, otp and other auth forms.",
            "providerId": "basic-flow",
            "topLevel": "false",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "auth-username-password-form",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticatorFlow": "true",
                "requirement": "CONDITIONAL",
                "priority": 20,
                "autheticatorFlow": "true",
                "flowAlias": "Browser - Conditional OTP",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "56ab628f-9dfb-4c54-8751-807daadd00a5",
            "alias": "http challenge",
            "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
            "providerId": "basic-flow",
            "topLevel": "true",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "no-cookie-redirect",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticatorFlow": "true",
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": "true",
                "flowAlias": "Authentication Options",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "c54ebfa7-6d76-41fd-9179-649803667216",
            "alias": "registration",
            "description": "registration flow",
            "providerId": "basic-flow",
            "topLevel": "true",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "registration-page-form",
                "authenticatorFlow": "true",
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": "true",
                "flowAlias": "registration form",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "29ad9f2d-1e31-454e-821e-b8c75647e5fe",
            "alias": "registration form",
            "description": "registration form",
            "providerId": "form-flow",
            "topLevel": "false",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "registration-user-creation",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "registration-profile-action",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 40,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "registration-password-action",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 50,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "registration-recaptcha-action",
                "authenticatorFlow": "false",
                "requirement": "DISABLED",
                "priority": 60,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "a9711f08-8aca-4fc9-b6fa-20609872f289",
            "alias": "reset credentials",
            "description": "Reset credentials for a user if they forgot their password or something",
            "providerId": "basic-flow",
            "topLevel": "true",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "reset-credentials-choose-user",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "reset-credential-email",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "reset-password",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 30,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticatorFlow": "true",
                "requirement": "CONDITIONAL",
                "priority": 40,
                "autheticatorFlow": "true",
                "flowAlias": "Reset - Conditional OTP",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "98dffe48-7aa5-4b12-9663-dcf952f386ce",
            "alias": "saml ecp",
            "description": "SAML ECP Profile Authentication Flow",
            "providerId": "basic-flow",
            "topLevel": "true",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "http-basic-authenticator",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              }
            ]
          }
        ],
        "authenticatorConfig": [
          {
            "id": "65816ac8-e945-4892-8f8f-1fd6a59df51a",
            "alias": "create unique user config",
            "config": {
              "require.password.update.after.registration": "false"
            }
          },
          {
            "id": "bd2e7e39-ea70-4c49-a721-645a35b1d3fb",
            "alias": "review profile config",
            "config": {
              "update.profile.on.first.login": "missing"
            }
          }
        ],
        "requiredActions": [
          {
            "alias": "CONFIGURE_TOTP",
            "name": "Configure OTP",
            "providerId": "CONFIGURE_TOTP",
            "enabled": "true",
            "defaultAction": "false",
            "priority": 10,
            "config": {}
          },
          {
            "alias": "terms_and_conditions",
            "name": "Terms and Conditions",
            "providerId": "terms_and_conditions",
            "enabled": "false",
            "defaultAction": "false",
            "priority": 20,
            "config": {}
          },
          {
            "alias": "UPDATE_PASSWORD",
            "name": "Update Password",
            "providerId": "UPDATE_PASSWORD",
            "enabled": "true",
            "defaultAction": "false",
            "priority": 30,
            "config": {}
          },
          {
            "alias": "UPDATE_PROFILE",
            "name": "Update Profile",
            "providerId": "UPDATE_PROFILE",
            "enabled": "true",
            "defaultAction": "false",
            "priority": 40,
            "config": {}
          },
          {
            "alias": "VERIFY_EMAIL",
            "name": "Verify Email",
            "providerId": "VERIFY_EMAIL",
            "enabled": "true",
            "defaultAction": "false",
            "priority": 50,
            "config": {}
          },
          {
            "alias": "delete_account",
            "name": "Delete Account",
            "providerId": "delete_account",
            "enabled": "false",
            "defaultAction": "false",
            "priority": 60,
            "config": {}
          },
          {
            "alias": "CONFIGURE_RECOVERY_AUTHN_CODES",
            "name": "Recovery Authentication Codes",
            "providerId": "CONFIGURE_RECOVERY_AUTHN_CODES",
            "enabled": "true",
            "defaultAction": "false",
            "priority": 70,
            "config": {}
          },
          {
            "alias": "UPDATE_EMAIL",
            "name": "Update Email",
            "providerId": "UPDATE_EMAIL",
            "enabled": "true",
            "defaultAction": "false",
            "priority": 70,
            "config": {}
          },
          {
            "alias": "webauthn-register",
            "name": "Webauthn Register",
            "providerId": "webauthn-register",
            "enabled": "true",
            "defaultAction": "false",
            "priority": 70,
            "config": {}
          },
          {
            "alias": "webauthn-register-passwordless",
            "name": "Webauthn Register Passwordless",
            "providerId": "webauthn-register-passwordless",
            "enabled": "true",
            "defaultAction": "false",
            "priority": 80,
            "config": {}
          },
          {
            "alias": "update_user_locale",
            "name": "Update User Locale",
            "providerId": "update_user_locale",
            "enabled": "true",
            "defaultAction": "false",
            "priority": 1000,
            "config": {}
          }
        ],
        "browserFlow": "browser",
        "registrationFlow": "registration",
        "directGrantFlow": "direct grant",
        "resetCredentialsFlow": "reset credentials",
        "clientAuthenticationFlow": "clients",
        "dockerAuthenticationFlow": "docker auth",
        "attributes": {
          "cibaBackchannelTokenDeliveryMode": "poll",
          "cibaExpiresIn": "120",
          "cibaAuthRequestedUserHint": "login_hint",
          "oauth2DeviceCodeLifespan": "600",
          "oauth2DevicePollingInterval": "5",
          "clientOfflineSessionMaxLifespan": "0",
          "clientSessionIdleTimeout": "0",
          "parRequestUriLifespan": "60",
          "clientSessionMaxLifespan": "0",
          "clientOfflineSessionIdleTimeout": "0",
          "cibaInterval": "5",
          "realmReusableOtpCode": "false"
        },
        "keycloakVersion": "20.0.1",
        "userManagedAccessAllowed": "false",
        "clientProfiles": {
          "profiles": []
        },
        "clientPolicies": {
          "policies": []
        }
      }
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: realm-impress
  data:
    impress.json: |-
      {
        "id": "14aeeced-0eeb-42c1-8782-820e8d0274f7",
        "realm": "impress",
        "notBefore": 0,
        "defaultSignatureAlgorithm": "RS256",
        "revokeRefreshToken": "false",
        "refreshTokenMaxReuse": 0,
        "accessTokenLifespan": 300,
        "accessTokenLifespanForImplicitFlow": 900,
        "ssoSessionIdleTimeout": 1800,
        "ssoSessionMaxLifespan": 36000,
        "ssoSessionIdleTimeoutRememberMe": 0,
        "ssoSessionMaxLifespanRememberMe": 0,
        "offlineSessionIdleTimeout": 2592000,
        "offlineSessionMaxLifespanEnabled": "false",
        "offlineSessionMaxLifespan": 5184000,
        "clientSessionIdleTimeout": 0,
        "clientSessionMaxLifespan": 0,
        "clientOfflineSessionIdleTimeout": 0,
        "clientOfflineSessionMaxLifespan": 0,
        "accessCodeLifespan": 60,
        "accessCodeLifespanUserAction": 300,
        "accessCodeLifespanLogin": 1800,
        "actionTokenGeneratedByAdminLifespan": 43200,
        "actionTokenGeneratedByUserLifespan": 300,
        "oauth2DeviceCodeLifespan": 600,
        "oauth2DevicePollingInterval": 5,
        "enabled": "true",
        "sslRequired": "external",
        "registrationAllowed": "true",
        "registrationEmailAsUsername": "false",
        "rememberMe": "true",
        "verifyEmail": "false",
        "loginWithEmailAllowed": "true",
        "duplicateEmailsAllowed": "false",
        "resetPasswordAllowed": "true",
        "editUsernameAllowed": "false",
        "bruteForceProtected": "false",
        "permanentLockout": "false",
        "maxFailureWaitSeconds": 900,
        "minimumQuickLoginWaitSeconds": 60,
        "waitIncrementSeconds": 60,
        "quickLoginCheckMilliSeconds": 1000,
        "maxDeltaTimeSeconds": 43200,
        "failureFactor": 30,
        "users": [
          {
            "username": "impress",
            "email": "impress@meet.world",
            "firstName": "John",
            "lastName": "Doe",
            "enabled": "true",
            "credentials": [
              {
                "type": "password",
                "value": "impress"
              }
            ],
            "realmRoles": [
              "user"
            ]
          },
          {
            "username": "user-e2e-chromium",
            "email": "user@chromium.e2e",
            "firstName": "E2E",
            "lastName": "Chromium",
            "enabled": "true",
            "credentials": [
              {
                "type": "password",
                "value": "password-e2e-chromium"
              }
            ],
            "realmRoles": [
              "user"
            ]
          },
          {
            "username": "user-e2e-webkit",
            "email": "user@webkit.e2e",
            "firstName": "E2E",
            "lastName": "Webkit",
            "enabled": "true",
            "credentials": [
              {
                "type": "password",
                "value": "password-e2e-webkit"
              }
            ],
            "realmRoles": [
              "user"
            ]
          },
          {
            "username": "user-e2e-firefox",
            "email": "user@firefox.e2e",
            "firstName": "E2E",
            "lastName": "Firefox",
            "enabled": "true",
            "credentials": [
              {
                "type": "password",
                "value": "password-e2e-firefox"
              }
            ],
            "realmRoles": [
              "user"
            ]
          }
        ],
        "roles": {
          "realm": [
            {
              "id": "62e972f0-8a68-498d-b644-6c0d275f35f2",
              "name": "uma_authorization",
              "description": "${role_uma_authorization}",
              "composite": "false",
              "clientRole": "false",
              "containerId": "ccf4fd40-4286-474d-854a-4714282a8bec",
              "attributes": {}
            },
            {
              "id": "2091849e-1b3d-4340-90c1-38af78e62bba",
              "name": "default-roles-impress",
              "description": "${role_default-roles}",
              "composite": "true",
              "composites": {
                "realm": [
                  "offline_access",
                  "uma_authorization"
                ],
                "client": {
                  "account": [
                    "view-profile",
                    "manage-account"
                  ]
                }
              },
              "clientRole": "false",
              "containerId": "ccf4fd40-4286-474d-854a-4714282a8bec",
              "attributes": {}
            },
            {
              "id": "2b468006-d540-4ee6-9bff-8db59289fd9e",
              "name": "offline_access",
              "description": "${role_offline-access}",
              "composite": "false",
              "clientRole": "false",
              "containerId": "ccf4fd40-4286-474d-854a-4714282a8bec",
              "attributes": {}
            }
          ],
          "client": {
            "realm-management": [
              {
                "id": "035e343e-03ce-478f-b8d4-304a4a3c1959",
                "name": "impersonation",
                "description": "${role_impersonation}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "be5b578b-8c72-4928-9e42-1fbee9ea6ee7",
                "name": "view-authorization",
                "description": "${role_view-authorization}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "2ddf0cca-c7a6-47e5-88c4-3dbc788c2147",
                "name": "manage-authorization",
                "description": "${role_manage-authorization}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "31e739df-2aa2-4fda-896d-8e2c1aa157ba",
                "name": "create-client",
                "description": "${role_create-client}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "e55f858a-d9c8-44ba-bee4-f29020fbbe3f",
                "name": "view-events",
                "description": "${role_view-events}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "658760e7-cd83-4a9d-96e2-0b8fc988f3cb",
                "name": "manage-identity-providers",
                "description": "${role_manage-identity-providers}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "74efa6fb-c2e3-4689-bd10-4fb64910b1be",
                "name": "manage-clients",
                "description": "${role_manage-clients}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "794b034a-e85a-41d4-9e2e-19dcca85c98c",
                "name": "realm-admin",
                "description": "${role_realm-admin}",
                "composite": "true",
                "composites": {
                  "client": {
                    "realm-management": [
                      "impersonation",
                      "view-authorization",
                      "manage-authorization",
                      "create-client",
                      "view-events",
                      "manage-identity-providers",
                      "manage-clients",
                      "view-identity-providers",
                      "query-users",
                      "manage-users",
                      "view-clients",
                      "view-users",
                      "manage-events",
                      "view-realm",
                      "query-realms",
                      "query-groups",
                      "manage-realm",
                      "query-clients"
                    ]
                  }
                },
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "3597eb3a-49d9-4654-aa37-bcd1dd5b6f04",
                "name": "view-identity-providers",
                "description": "${role_view-identity-providers}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "ea5d4304-8d99-42db-841a-eba06a6cfa16",
                "name": "query-users",
                "description": "${role_query-users}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "613342a9-ee1b-40d8-bc61-6a827e896ed6",
                "name": "manage-users",
                "description": "${role_manage-users}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "b8a70871-7d66-41c9-bffa-a74774c7558d",
                "name": "view-clients",
                "description": "${role_view-clients}",
                "composite": "true",
                "composites": {
                  "client": {
                    "realm-management": [
                      "query-clients"
                    ]
                  }
                },
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "42daad80-1e65-4b58-8f15-41806a0b19d1",
                "name": "manage-events",
                "description": "${role_manage-events}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "16bc3bdd-c6d1-4d04-845f-a155ea8358f9",
                "name": "view-users",
                "description": "${role_view-users}",
                "composite": "true",
                "composites": {
                  "client": {
                    "realm-management": [
                      "query-users",
                      "query-groups"
                    ]
                  }
                },
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "aefa4681-af19-450b-a1ca-56f76cf545a9",
                "name": "query-realms",
                "description": "${role_query-realms}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "0e65088b-464b-44ef-aa73-77ac3bc01388",
                "name": "view-realm",
                "description": "${role_view-realm}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "7c31ff0c-76e4-42b1-b961-5471b9ec06d3",
                "name": "query-groups",
                "description": "${role_query-groups}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "2d084915-9f27-4eb1-a131-cf06a63aef77",
                "name": "manage-realm",
                "description": "${role_manage-realm}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              },
              {
                "id": "0d625951-5804-4cc9-86de-b559d48d70e6",
                "name": "query-clients",
                "description": "${role_query-clients}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "0d004a05-7049-452c-83a8-2bae2b5d8015",
                "attributes": {}
              }
            ],
            "security-admin-console": [],
            "admin-cli": [],
            "account-console": [],
            "broker": [
              {
                "id": "0236991e-7561-4718-a93f-1aaee99346d3",
                "name": "read-token",
                "description": "${role_read-token}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "41dd8f26-46c2-471a-859e-01886f972ff9",
                "attributes": {}
              }
            ],
            "impress": [],
            "account": [
              {
                "id": "12e01cdc-7d69-4b1a-925b-04b186cab968",
                "name": "manage-consent",
                "description": "${role_manage-consent}",
                "composite": "true",
                "composites": {
                  "client": {
                    "account": [
                      "view-consent"
                    ]
                  }
                },
                "clientRole": "true",
                "containerId": "06721011-1061-4ca7-944f-be2a20719e20",
                "attributes": {}
              },
              {
                "id": "6421ada6-76ec-47d0-a015-8b2b46cab7d7",
                "name": "view-groups",
                "description": "${role_view-groups}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "06721011-1061-4ca7-944f-be2a20719e20",
                "attributes": {}
              },
              {
                "id": "a72f6ba7-fc07-4560-8d19-e0d0163a11ee",
                "name": "view-profile",
                "description": "${role_view-profile}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "06721011-1061-4ca7-944f-be2a20719e20",
                "attributes": {}
              },
              {
                "id": "ea2f4cb9-3f6b-421a-8159-b0577f59970e",
                "name": "manage-account",
                "description": "${role_manage-account}",
                "composite": "true",
                "composites": {
                  "client": {
                    "account": [
                      "manage-account-links"
                    ]
                  }
                },
                "clientRole": "true",
                "containerId": "06721011-1061-4ca7-944f-be2a20719e20",
                "attributes": {}
              },
              {
                "id": "888685c9-33c4-44b1-b7d9-ad57ec66d701",
                "name": "manage-account-links",
                "description": "${role_manage-account-links}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "06721011-1061-4ca7-944f-be2a20719e20",
                "attributes": {}
              },
              {
                "id": "d46831ad-a27a-4f10-8668-4528215d404b",
                "name": "view-applications",
                "description": "${role_view-applications}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "06721011-1061-4ca7-944f-be2a20719e20",
                "attributes": {}
              },
              {
                "id": "8d093ad2-9568-4e7d-8116-ba10a6a22f5e",
                "name": "view-consent",
                "description": "${role_view-consent}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "06721011-1061-4ca7-944f-be2a20719e20",
                "attributes": {}
              },
              {
                "id": "3eed0c28-bc3e-4490-b216-13cf6b96f1c1",
                "name": "delete-account",
                "description": "${role_delete-account}",
                "composite": "false",
                "clientRole": "true",
                "containerId": "06721011-1061-4ca7-944f-be2a20719e20",
                "attributes": {}
              }
            ]
          }
        },
        "groups": [],
        "defaultRole": {
          "id": "59430f06-588c-455c-a0fa-5c7c8d0633d6",
          "name": "default-roles-impress",
          "description": "${role_default-roles}",
          "composite": "true",
          "clientRole": "false",
          "containerId": "ccf4fd40-4286-474d-854a-4714282a8bec"
        },
        "requiredCredentials": [
          "password"
        ],
        "otpPolicyType": "totp",
        "otpPolicyAlgorithm": "HmacSHA1",
        "otpPolicyInitialCounter": 0,
        "otpPolicyDigits": 6,
        "otpPolicyLookAheadWindow": 1,
        "otpPolicyPeriod": 30,
        "otpPolicyCodeReusable": "false",
        "otpSupportedApplications": [
          "totpAppGoogleName",
          "totpAppFreeOTPName"
        ],
        "webAuthnPolicyRpEntityName": "keycloak",
        "webAuthnPolicySignatureAlgorithms": [
          "ES256"
        ],
        "webAuthnPolicyRpId": "",
        "webAuthnPolicyAttestationConveyancePreference": "not specified",
        "webAuthnPolicyAuthenticatorAttachment": "not specified",
        "webAuthnPolicyRequireResidentKey": "not specified",
        "webAuthnPolicyUserVerificationRequirement": "not specified",
        "webAuthnPolicyCreateTimeout": 0,
        "webAuthnPolicyAvoidSameAuthenticatorRegister": "false",
        "webAuthnPolicyAcceptableAaguids": [],
        "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
        "webAuthnPolicyPasswordlessSignatureAlgorithms": [
          "ES256"
        ],
        "webAuthnPolicyPasswordlessRpId": "",
        "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
        "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
        "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
        "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
        "webAuthnPolicyPasswordlessCreateTimeout": 0,
        "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": "false",
        "webAuthnPolicyPasswordlessAcceptableAaguids": [],
        "scopeMappings": [
          {
            "clientScope": "offline_access",
            "roles": [
              "offline_access"
            ]
          }
        ],
        "clientScopeMappings": {
          "account": [
            {
              "client": "account-console",
              "roles": [
                "manage-account",
                "view-groups"
              ]
            }
          ]
        },
        "clients": [
          {
            "id": "be823b88-70ec-4f9a-accb-2fdd8364b430",
            "clientId": "account",
            "name": "${client_account}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/impress/account/",
            "surrogateAuthRequired": "false",
            "enabled": "true",
            "alwaysDisplayInConsole": "false",
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "/realms/impress/account/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": "false",
            "consentRequired": "false",
            "standardFlowEnabled": "true",
            "implicitFlowEnabled": "false",
            "directAccessGrantsEnabled": "false",
            "serviceAccountsEnabled": "false",
            "publicClient": "true",
            "frontchannelLogout": "false",
            "protocol": "openid-connect",
            "attributes": {
              "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": "false",
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "66bc0975-647b-42a6-96ea-332e804adfe7",
            "clientId": "account-console",
            "name": "${client_account-console}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/impress/account/",
            "surrogateAuthRequired": "false",
            "enabled": "true",
            "alwaysDisplayInConsole": "false",
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "/realms/impress/account/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": "false",
            "consentRequired": "false",
            "standardFlowEnabled": "true",
            "implicitFlowEnabled": "false",
            "directAccessGrantsEnabled": "false",
            "serviceAccountsEnabled": "false",
            "publicClient": "true",
            "frontchannelLogout": "false",
            "protocol": "openid-connect",
            "attributes": {
              "post.logout.redirect.uris": "+",
              "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": "false",
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
              {
                "id": "df656d13-4ae5-4d4d-8dfb-df02b1e30819",
                "name": "audience resolve",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-audience-resolve-mapper",
                "consentRequired": "false",
                "config": {}
              }
            ],
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "7d10dc99-5895-4288-91aa-910e46cfd925",
            "clientId": "admin-cli",
            "name": "${client_admin-cli}",
            "surrogateAuthRequired": "false",
            "enabled": "true",
            "alwaysDisplayInConsole": "false",
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": "false",
            "consentRequired": "false",
            "standardFlowEnabled": "false",
            "implicitFlowEnabled": "false",
            "directAccessGrantsEnabled": "true",
            "serviceAccountsEnabled": "false",
            "publicClient": "true",
            "frontchannelLogout": "false",
            "protocol": "openid-connect",
            "attributes": {
              "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": "false",
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "1c84d086-2cbe-449a-b868-e83b1d1150c1",
            "clientId": "broker",
            "name": "${client_broker}",
            "surrogateAuthRequired": "false",
            "enabled": "true",
            "alwaysDisplayInConsole": "false",
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": "true",
            "consentRequired": "false",
            "standardFlowEnabled": "true",
            "implicitFlowEnabled": "false",
            "directAccessGrantsEnabled": "false",
            "serviceAccountsEnabled": "false",
            "publicClient": "false",
            "frontchannelLogout": "false",
            "protocol": "openid-connect",
            "attributes": {
              "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": "false",
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "4c6df6a4-96f3-483b-97d2-d33dd78308f6",
            "clientId": "impress",
            "name": "",
            "description": "",
            "rootUrl": "",
            "adminUrl": "",
            "baseUrl": "",
            "surrogateAuthRequired": "false",
            "enabled": "true",
            "alwaysDisplayInConsole": "false",
            "clientAuthenticatorType": "client-secret",
            "secret": "ThisIsAnExampleKeyForDevPurposeOnly",
            "redirectUris": [
              "http://localhost:8070/*",
              "http://localhost:8071/*",
              "https://impress.onet.bigtree.space/*",
              "http://localhost:8088/*",
              "http://localhost:3000/*"
            ],
            "webOrigins": [
              "https://impress.onet.bigtree.space",
              "http://localhost:8088",
              "http://localhost:8070",
              "http://localhost:3000"
            ],
            "notBefore": 0,
            "bearerOnly": "false",
            "consentRequired": "false",
            "standardFlowEnabled": "true",
            "implicitFlowEnabled": "false",
            "directAccessGrantsEnabled": "false",
            "serviceAccountsEnabled": "false",
            "publicClient": "false",
            "frontchannelLogout": "true",
            "protocol": "openid-connect",
            "attributes": {
              "access.token.lifespan": "-1",
              "client.secret.creation.time": "1707820779",
              "user.info.response.signature.alg": "RS256",
              "post.logout.redirect.uris": "http://localhost:8070/*##https://impress.onet.bigtree.space/*##http://localhost:3000/*",
              "oauth2.device.authorization.grant.enabled": "false",
              "use.jwks.url": "false",
              "backchannel.logout.revoke.offline.tokens": "false",
              "use.refresh.tokens": "true",
              "tls-client-certificate-bound-access-tokens": "false",
              "oidc.ciba.grant.enabled": "false",
              "backchannel.logout.session.required": "true",
              "client_credentials.use_refresh_token": "false",
              "acr.loa.map": "{}",
              "require.pushed.authorization.requests": "false",
              "display.on.consent.screen": "false",
              "client.session.idle.timeout": "-1",
              "token.response.type.bearer.lower-case": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": "true",
            "nodeReRegistrationTimeout": -1,
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "a8d3b941-7661-4ccd-806c-4920910e8345",
            "clientId": "realm-management",
            "name": "${client_realm-management}",
            "surrogateAuthRequired": "false",
            "enabled": "true",
            "alwaysDisplayInConsole": "false",
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": "true",
            "consentRequired": "false",
            "standardFlowEnabled": "true",
            "implicitFlowEnabled": "false",
            "directAccessGrantsEnabled": "false",
            "serviceAccountsEnabled": "false",
            "publicClient": "false",
            "frontchannelLogout": "false",
            "protocol": "openid-connect",
            "attributes": {
              "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": "false",
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "e324f0df-36a6-4651-bf7e-3cdfb9779c1b",
            "clientId": "security-admin-console",
            "name": "${client_security-admin-console}",
            "rootUrl": "${authAdminUrl}",
            "baseUrl": "/admin/impress/console/",
            "surrogateAuthRequired": "false",
            "enabled": "true",
            "alwaysDisplayInConsole": "false",
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "/admin/impress/console/*"
            ],
            "webOrigins": [
              "+"
            ],
            "notBefore": 0,
            "bearerOnly": "false",
            "consentRequired": "false",
            "standardFlowEnabled": "true",
            "implicitFlowEnabled": "false",
            "directAccessGrantsEnabled": "false",
            "serviceAccountsEnabled": "false",
            "publicClient": "true",
            "frontchannelLogout": "false",
            "protocol": "openid-connect",
            "attributes": {
              "post.logout.redirect.uris": "+",
              "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": "false",
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
              {
                "id": "dad7f07e-69c6-4d14-8d00-83a898a466e6",
                "name": "locale",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "locale",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "locale",
                  "jsonType.label": "String"
                }
              }
            ],
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          }
        ],
        "clientScopes": [
          {
            "id": "3030e7b5-e403-4208-825b-d5f50155c021",
            "name": "roles",
            "description": "OpenID Connect scope for add user roles to the access token",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "false",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${rolesScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "fa6343db-5281-4146-9654-943d35b1c7dc",
                "name": "client roles",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-client-role-mapper",
                "consentRequired": "false",
                "config": {
                  "user.attribute": "foo",
                  "access.token.claim": "true",
                  "claim.name": "resource_access.${client_id}.roles",
                  "jsonType.label": "String",
                  "multivalued": "true"
                }
              },
              {
                "id": "30a7392c-cbb5-407f-84cc-be6f77fcfe25",
                "name": "audience resolve",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-audience-resolve-mapper",
                "consentRequired": "false",
                "config": {}
              },
              {
                "id": "f870d1b2-083c-427f-9006-aa2937eb06b8",
                "name": "realm roles",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-realm-role-mapper",
                "consentRequired": "false",
                "config": {
                  "user.attribute": "foo",
                  "access.token.claim": "true",
                  "claim.name": "realm_access.roles",
                  "jsonType.label": "String",
                  "multivalued": "true"
                }
              }
            ]
          },
          {
            "id": "6c4a9100-074b-4e5c-a510-0fed9f270cc7",
            "name": "role_list",
            "description": "SAML role list",
            "protocol": "saml",
            "attributes": {
              "consent.screen.text": "${samlRoleListScopeConsentText}",
              "display.on.consent.screen": "true"
            },
            "protocolMappers": [
              {
                "id": "a9795729-932a-4af0-a166-aebed98e8379",
                "name": "role list",
                "protocol": "saml",
                "protocolMapper": "saml-role-list-mapper",
                "consentRequired": "false",
                "config": {
                  "single": "false",
                  "attribute.nameformat": "Basic",
                  "attribute.name": "Role"
                }
              }
            ]
          },
          {
            "id": "7284b88d-7b3a-4ad1-8e14-203acbb8bcd9",
            "name": "acr",
            "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "false",
              "display.on.consent.screen": "false"
            },
            "protocolMappers": [
              {
                "id": "ea00d2d5-e13d-4970-9bed-5689566721e2",
                "name": "acr loa level",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-acr-mapper",
                "consentRequired": "false",
                "config": {
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "userinfo.token.claim": "true"
                }
              }
            ]
          },
          {
            "id": "76950b3d-6889-4c50-8340-93261af25469",
            "name": "offline_access",
            "description": "OpenID Connect built-in scope: offline_access",
            "protocol": "openid-connect",
            "attributes": {
              "consent.screen.text": "${offlineAccessScopeConsentText}",
              "display.on.consent.screen": "true"
            }
          },
          {
            "id": "a19f4e19-a1d4-42cf-931e-7dafb8b9a7c7",
            "name": "address",
            "description": "OpenID Connect built-in scope: address",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${addressScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "9a30d681-5630-4f10-a6a0-6f346ed2383c",
                "name": "address",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-address-mapper",
                "consentRequired": "false",
                "config": {
                  "user.attribute.formatted": "formatted",
                  "user.attribute.country": "country",
                  "user.attribute.postal_code": "postal_code",
                  "userinfo.token.claim": "true",
                  "user.attribute.street": "street",
                  "id.token.claim": "true",
                  "user.attribute.region": "region",
                  "access.token.claim": "true",
                  "user.attribute.locality": "locality"
                }
              }
            ]
          },
          {
            "id": "f34b2163-daab-454b-a85a-f87536ac1be1",
            "name": "web-origins",
            "description": "OpenID Connect scope for add allowed web origins to the access token",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "false",
              "display.on.consent.screen": "false",
              "consent.screen.text": ""
            },
            "protocolMappers": [
              {
                "id": "d9ed098d-5e37-420f-a41b-3d7e95e0e1be",
                "name": "allowed web origins",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-allowed-origins-mapper",
                "consentRequired": "false",
                "config": {}
              }
            ]
          },
          {
            "id": "bd389c96-1e72-451b-bb82-2a21582f2ef9",
            "name": "profile",
            "description": "OpenID Connect built-in scope: profile",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${profileScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "60aa082f-b5cf-4e56-93de-605fdd0dcebe",
                "name": "profile",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "profile",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "profile",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "9ffae8fa-14c4-4898-88e1-409b0286959d",
                "name": "gender",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "gender",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "gender",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "bc53c620-07d7-4279-992f-4ee652c62c7a",
                "name": "zoneinfo",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "zoneinfo",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "zoneinfo",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "16e47312-1ab1-4ccc-961f-2a076ab3e4fe",
                "name": "updated at",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "updatedAt",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "updated_at",
                  "jsonType.label": "long"
                }
              },
              {
                "id": "bcb1a577-9740-4227-b7a6-f04e48cc77cd",
                "name": "username",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "username",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "preferred_username",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "263e6cf4-00ea-45b7-9002-8d2fde74b1a5",
                "name": "birthdate",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "birthdate",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "birthdate",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "e0d56aaa-bd00-4c60-92b0-dd317f6a3e4d",
                "name": "first name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "firstName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "first_name",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "50331a30-ce45-4187-9a8e-521982ab76bf",
                "name": "nickname",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "nickname",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "nickname",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "35aa2437-d5cc-4466-9d4d-05a5d983499a",
                "name": "last name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "lastName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "last_name",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "1528caf5-aa04-4fc4-ad7a-295f0cf627f3",
                "name": "middle name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "middleName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "middle_name",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "3a779557-0421-4371-b4ce-a06ea75d00e3",
                "name": "full name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-full-name-mapper",
                "consentRequired": "false",
                "config": {
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "userinfo.token.claim": "true"
                }
              },
              {
                "id": "145793c3-576a-40e8-b831-91c53cd04f48",
                "name": "picture",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "picture",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "picture",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "80c0d4e0-a218-4fcb-a7da-a1ec68286968",
                "name": "website",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "website",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "website",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "ee540704-572c-4e08-90a6-24d5a8293114",
                "name": "locale",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "locale",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "locale",
                  "jsonType.label": "String"
                }
              }
            ]
          },
          {
            "id": "e619050f-76cb-408c-a598-dac3f65182e0",
            "name": "microprofile-jwt",
            "description": "Microprofile - JWT built-in scope",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "false"
            },
            "protocolMappers": [
              {
                "id": "d30f02ba-10d4-453d-8fa8-73f14f95cf48",
                "name": "upn",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "username",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "upn",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "9ba0c965-3fa8-4243-953a-3552c4d2a5a0",
                "name": "groups",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-realm-role-mapper",
                "consentRequired": "false",
                "config": {
                  "multivalued": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "foo",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "groups",
                  "jsonType.label": "String"
                }
              }
            ]
          },
          {
            "id": "4e5a11ca-e9ea-49df-b5bf-0d823fa482fb",
            "name": "phone",
            "description": "OpenID Connect built-in scope: phone",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${phoneScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "1be2170c-c6de-4f2b-ae0a-c75c424b4c02",
                "name": "phone number",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "phoneNumber",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "phone_number",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "3e486ca1-42dd-4f1f-946b-e7874e306de8",
                "name": "phone number verified",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "phoneNumberVerified",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "phone_number_verified",
                  "jsonType.label": "boolean"
                }
              }
            ]
          },
          {
            "id": "2d926d2d-e5a3-43e1-bf77-c66e7765ab6b",
            "name": "email",
            "description": "OpenID Connect built-in scope: email",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${emailScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "6dcabc40-7577-4439-97bf-b30b3e3ae139",
                "name": "email",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "email",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "email",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "8c91bb28-cb2a-496e-a789-3a3c10766fbd",
                "name": "email verified",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": "false",
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "emailVerified",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "email_verified",
                  "jsonType.label": "boolean"
                }
              }
            ]
          }
        ],
        "defaultDefaultClientScopes": [
          "role_list",
          "profile",
          "email",
          "roles",
          "web-origins",
          "acr"
        ],
        "defaultOptionalClientScopes": [
          "offline_access",
          "address",
          "phone",
          "microprofile-jwt"
        ],
        "browserSecurityHeaders": {
          "contentSecurityPolicyReportOnly": "",
          "xContentTypeOptions": "nosniff",
          "xRobotsTag": "none",
          "xFrameOptions": "SAMEORIGIN",
          "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
          "xXSSProtection": "1; mode=block",
          "strictTransportSecurity": "max-age=31536000; includeSubDomains"
        },
        "smtpServer": {},
        "eventsEnabled": "false",
        "eventsListeners": [
          "jboss-logging"
        ],
        "enabledEventTypes": [],
        "adminEventsEnabled": "false",
        "adminEventsDetailsEnabled": "false",
        "identityProviders": [],
        "identityProviderMappers": [],
        "components": {
          "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
            {
              "id": "5bdd6b19-ad71-4c90-b63e-83a0e7f0835d",
              "name": "Consent Required",
              "providerId": "consent-required",
              "subType": "anonymous",
              "subComponents": {},
              "config": {}
            },
            {
              "id": "559d8f0e-f8bc-44c4-8215-d140d11b39f2",
              "name": "Allowed Client Scopes",
              "providerId": "allowed-client-templates",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "allow-default-scopes": [
                  "true"
                ]
              }
            },
            {
              "id": "6a20588e-c55c-4a84-b4f8-0e0233737ca2",
              "name": "Max Clients Limit",
              "providerId": "max-clients",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "max-clients": [
                  "200"
                ]
              }
            },
            {
              "id": "403e4ca4-76e3-47c3-93f2-ea1c43425b78",
              "name": "Allowed Client Scopes",
              "providerId": "allowed-client-templates",
              "subType": "authenticated",
              "subComponents": {},
              "config": {
                "allow-default-scopes": [
                  "true"
                ]
              }
            },
            {
              "id": "b5590989-4cf8-44c3-940d-01fcc212e876",
              "name": "Allowed Protocol Mapper Types",
              "providerId": "allowed-protocol-mappers",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "allowed-protocol-mapper-types": [
                  "saml-role-list-mapper",
                  "oidc-usermodel-attribute-mapper",
                  "saml-user-attribute-mapper",
                  "saml-user-property-mapper",
                  "oidc-sha256-pairwise-sub-mapper",
                  "oidc-full-name-mapper",
                  "oidc-address-mapper",
                  "oidc-usermodel-property-mapper"
                ]
              }
            },
            {
              "id": "325053bb-2343-4946-964b-5c83f6acf980",
              "name": "Full Scope Disabled",
              "providerId": "scope",
              "subType": "anonymous",
              "subComponents": {},
              "config": {}
            },
            {
              "id": "1b552f46-23c1-460e-aa37-ced240b446d4",
              "name": "Allowed Protocol Mapper Types",
              "providerId": "allowed-protocol-mappers",
              "subType": "authenticated",
              "subComponents": {},
              "config": {
                "allowed-protocol-mapper-types": [
                  "saml-user-property-mapper",
                  "saml-user-attribute-mapper",
                  "oidc-address-mapper",
                  "oidc-sha256-pairwise-sub-mapper",
                  "oidc-usermodel-property-mapper",
                  "oidc-full-name-mapper",
                  "saml-role-list-mapper",
                  "oidc-usermodel-attribute-mapper"
                ]
              }
            },
            {
              "id": "52472751-64c5-4fc5-b2f1-8b0da4aa251a",
              "name": "Trusted Hosts",
              "providerId": "trusted-hosts",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "host-sending-registration-request-must-match": [
                  "true"
                ],
                "client-uris-must-match": [
                  "true"
                ]
              }
            }
          ],
          "org.keycloak.userprofile.UserProfileProvider": [
            {
              "id": "09d1015d-0f8f-47be-bb8b-944ce5c042d5",
              "providerId": "declarative-user-profile",
              "subComponents": {},
              "config": {}
            }
          ],
          "org.keycloak.keys.KeyProvider": [
            {
              "id": "275cbd65-aedf-4c40-a2f6-17661574c2aa",
              "name": "aes-generated",
              "providerId": "aes-generated",
              "subComponents": {},
              "config": {
                "priority": [
                  "100"
                ]
              }
            },
            {
              "id": "b42c8f4b-9d76-4ebc-ba0d-1e698d2ae028",
              "name": "hmac-generated",
              "providerId": "hmac-generated",
              "subComponents": {},
              "config": {
                "priority": [
                  "100"
                ],
                "algorithm": [
                  "HS256"
                ]
              }
            },
            {
              "id": "6acac21b-071b-4b6c-9eb3-4ed9b9ac8a34",
              "name": "rsa-enc-generated",
              "providerId": "rsa-enc-generated",
              "subComponents": {},
              "config": {
                "priority": [
                  "100"
                ],
                "algorithm": [
                  "RSA-OAEP"
                ]
              }
            },
            {
              "id": "5e8215ad-2da6-4c82-bfbe-9fb8696c0484",
              "name": "rsa-generated",
              "providerId": "rsa-generated",
              "subComponents": {},
              "config": {
                "priority": [
                  "100"
                ]
              }
            }
          ]
        },
        "internationalizationEnabled": "false",
        "supportedLocales": [],
        "authenticationFlows": [
          {
            "id": "5f9fcbcf-3430-4439-b059-c919cb9048e6",
            "alias": "Account verification options",
            "description": "Method with which to verity the existing account",
            "providerId": "basic-flow",
            "topLevel": "false",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "idp-email-verification",
                "authenticatorFlow": "false",
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticatorFlow": "true",
                "requirement": "ALTERNATIVE",
                "priority": 20,
                "autheticatorFlow": "true",
                "flowAlias": "Verify Existing Account by Re-authentication",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "5c7794bc-9830-48df-b4f3-dbb0bcd50ce9",
            "alias": "Authentication Options",
            "description": "Authentication options.",
            "providerId": "basic-flow",
            "topLevel": "false",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "basic-auth",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "basic-auth-otp",
                "authenticatorFlow": "false",
                "requirement": "DISABLED",
                "priority": 20,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "auth-spnego",
                "authenticatorFlow": "false",
                "requirement": "DISABLED",
                "priority": 30,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "d56a8f1d-f910-4080-be63-6e5207f6d2e0",
            "alias": "Browser - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": "false",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "auth-otp-form",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "e00c795f-8c50-4428-b9a4-4a0f5100c623",
            "alias": "Direct Grant - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": "false",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "direct-grant-validate-otp",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "656902e4-f1c8-49da-8fe7-6438898205be",
            "alias": "First broker login - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": "false",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "auth-otp-form",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "fb0f5df9-3bf2-465a-b9df-722214309414",
            "alias": "Handle Existing Account",
            "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
            "providerId": "basic-flow",
            "topLevel": "false",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "idp-confirm-link",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticatorFlow": "true",
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": "true",
                "flowAlias": "Account verification options",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "0a617ea9-a84b-4b34-b487-dbfa11d274d7",
            "alias": "Reset - Conditional OTP",
            "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
            "providerId": "basic-flow",
            "topLevel": "false",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "reset-otp",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "1d9cec89-e539-467f-bdc7-824e2b725eff",
            "alias": "User creation or linking",
            "description": "Flow for the existing/non-existing user alternatives",
            "providerId": "basic-flow",
            "topLevel": "false",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticatorConfig": "create unique user config",
                "authenticator": "idp-create-user-if-unique",
                "authenticatorFlow": "false",
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticatorFlow": "true",
                "requirement": "ALTERNATIVE",
                "priority": 20,
                "autheticatorFlow": "true",
                "flowAlias": "Handle Existing Account",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "15656d47-8ed2-49cc-9adb-d52c1e2e16a5",
            "alias": "Verify Existing Account by Re-authentication",
            "description": "Reauthentication of existing account",
            "providerId": "basic-flow",
            "topLevel": "false",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "idp-username-password-form",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticatorFlow": "true",
                "requirement": "CONDITIONAL",
                "priority": 20,
                "autheticatorFlow": "true",
                "flowAlias": "First broker login - Conditional OTP",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "0bdc8fac-179c-4449-8463-bdfa4e7a1d3b",
            "alias": "browser",
            "description": "browser based authentication",
            "providerId": "basic-flow",
            "topLevel": "true",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "auth-cookie",
                "authenticatorFlow": "false",
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "auth-spnego",
                "authenticatorFlow": "false",
                "requirement": "DISABLED",
                "priority": 20,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "identity-provider-redirector",
                "authenticatorFlow": "false",
                "requirement": "ALTERNATIVE",
                "priority": 25,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticatorFlow": "true",
                "requirement": "ALTERNATIVE",
                "priority": 30,
                "autheticatorFlow": "true",
                "flowAlias": "forms",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "369d6fc1-c824-4da6-b53f-377cdce0287b",
            "alias": "clients",
            "description": "Base authentication for clients",
            "providerId": "client-flow",
            "topLevel": "true",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "client-secret",
                "authenticatorFlow": "false",
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "client-jwt",
                "authenticatorFlow": "false",
                "requirement": "ALTERNATIVE",
                "priority": 20,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "client-secret-jwt",
                "authenticatorFlow": "false",
                "requirement": "ALTERNATIVE",
                "priority": 30,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "client-x509",
                "authenticatorFlow": "false",
                "requirement": "ALTERNATIVE",
                "priority": 40,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "747c5a64-17a0-4617-a1fd-5800bed3ee0b",
            "alias": "direct grant",
            "description": "OpenID Connect Resource Owner Grant",
            "providerId": "basic-flow",
            "topLevel": "true",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "direct-grant-validate-username",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "direct-grant-validate-password",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticatorFlow": "true",
                "requirement": "CONDITIONAL",
                "priority": 30,
                "autheticatorFlow": "true",
                "flowAlias": "Direct Grant - Conditional OTP",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "264b2faa-9c99-44c7-9a0b-769567202dd4",
            "alias": "docker auth",
            "description": "Used by Docker clients to authenticate against the IDP",
            "providerId": "basic-flow",
            "topLevel": "true",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "docker-http-basic-authenticator",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "d5be6b11-8f16-4bab-a7c1-4c2181006624",
            "alias": "first broker login",
            "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
            "providerId": "basic-flow",
            "topLevel": "true",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticatorConfig": "review profile config",
                "authenticator": "idp-review-profile",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticatorFlow": "true",
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": "true",
                "flowAlias": "User creation or linking",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "7a11556b-7443-44e1-ae71-df166a0fbc06",
            "alias": "forms",
            "description": "Username, password, otp and other auth forms.",
            "providerId": "basic-flow",
            "topLevel": "false",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "auth-username-password-form",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticatorFlow": "true",
                "requirement": "CONDITIONAL",
                "priority": 20,
                "autheticatorFlow": "true",
                "flowAlias": "Browser - Conditional OTP",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "8caa4fe3-7460-4cde-8281-ee9a99858af3",
            "alias": "http challenge",
            "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
            "providerId": "basic-flow",
            "topLevel": "true",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "no-cookie-redirect",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticatorFlow": "true",
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": "true",
                "flowAlias": "Authentication Options",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "46515823-acc8-498f-a2cd-26f639ad7c19",
            "alias": "registration",
            "description": "registration flow",
            "providerId": "basic-flow",
            "topLevel": "true",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "registration-page-form",
                "authenticatorFlow": "true",
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": "true",
                "flowAlias": "registration form",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "db6f2ef2-8194-4e9e-8f1c-f210cbccbf06",
            "alias": "registration form",
            "description": "registration form",
            "providerId": "form-flow",
            "topLevel": "false",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "registration-user-creation",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "registration-profile-action",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 40,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "registration-password-action",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 50,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "registration-recaptcha-action",
                "authenticatorFlow": "false",
                "requirement": "DISABLED",
                "priority": 60,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "c70484d5-f67f-4251-80d0-9084fd525f4e",
            "alias": "reset credentials",
            "description": "Reset credentials for a user if they forgot their password or something",
            "providerId": "basic-flow",
            "topLevel": "true",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "reset-credentials-choose-user",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "reset-credential-email",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticator": "reset-password",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 30,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              },
              {
                "authenticatorFlow": "true",
                "requirement": "CONDITIONAL",
                "priority": 40,
                "autheticatorFlow": "true",
                "flowAlias": "Reset - Conditional OTP",
                "userSetupAllowed": "false"
              }
            ]
          },
          {
            "id": "fb538ab0-5f06-4fe6-8574-eb425d386784",
            "alias": "saml ecp",
            "description": "SAML ECP Profile Authentication Flow",
            "providerId": "basic-flow",
            "topLevel": "true",
            "builtIn": "true",
            "authenticationExecutions": [
              {
                "authenticator": "http-basic-authenticator",
                "authenticatorFlow": "false",
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": "false",
                "userSetupAllowed": "false"
              }
            ]
          }
        ],
        "authenticatorConfig": [
          {
            "id": "0f06f253-f0ab-4bf0-8d31-85c25daf13e9",
            "alias": "create unique user config",
            "config": {
              "require.password.update.after.registration": "false"
            }
          },
          {
            "id": "9f837ab5-4bba-45c1-bf8c-7e7114d6389b",
            "alias": "review profile config",
            "config": {
              "update.profile.on.first.login": "missing"
            }
          }
        ],
        "requiredActions": [
          {
            "alias": "CONFIGURE_TOTP",
            "name": "Configure OTP",
            "providerId": "CONFIGURE_TOTP",
            "enabled": "true",
            "defaultAction": "false",
            "priority": 10,
            "config": {}
          },
          {
            "alias": "terms_and_conditions",
            "name": "Terms and Conditions",
            "providerId": "terms_and_conditions",
            "enabled": "false",
            "defaultAction": "false",
            "priority": 20,
            "config": {}
          },
          {
            "alias": "UPDATE_PASSWORD",
            "name": "Update Password",
            "providerId": "UPDATE_PASSWORD",
            "enabled": "true",
            "defaultAction": "false",
            "priority": 30,
            "config": {}
          },
          {
            "alias": "UPDATE_PROFILE",
            "name": "Update Profile",
            "providerId": "UPDATE_PROFILE",
            "enabled": "true",
            "defaultAction": "false",
            "priority": 40,
            "config": {}
          },
          {
            "alias": "VERIFY_EMAIL",
            "name": "Verify Email",
            "providerId": "VERIFY_EMAIL",
            "enabled": "true",
            "defaultAction": "false",
            "priority": 50,
            "config": {}
          },
          {
            "alias": "delete_account",
            "name": "Delete Account",
            "providerId": "delete_account",
            "enabled": "false",
            "defaultAction": "false",
            "priority": 60,
            "config": {}
          },
          {
            "alias": "CONFIGURE_RECOVERY_AUTHN_CODES",
            "name": "Recovery Authentication Codes",
            "providerId": "CONFIGURE_RECOVERY_AUTHN_CODES",
            "enabled": "true",
            "defaultAction": "false",
            "priority": 70,
            "config": {}
          },
          {
            "alias": "UPDATE_EMAIL",
            "name": "Update Email",
            "providerId": "UPDATE_EMAIL",
            "enabled": "true",
            "defaultAction": "false",
            "priority": 70,
            "config": {}
          },
          {
            "alias": "webauthn-register",
            "name": "Webauthn Register",
            "providerId": "webauthn-register",
            "enabled": "true",
            "defaultAction": "false",
            "priority": 70,
            "config": {}
          },
          {
            "alias": "webauthn-register-passwordless",
            "name": "Webauthn Register Passwordless",
            "providerId": "webauthn-register-passwordless",
            "enabled": "true",
            "defaultAction": "false",
            "priority": 80,
            "config": {}
          },
          {
            "alias": "update_user_locale",
            "name": "Update User Locale",
            "providerId": "update_user_locale",
            "enabled": "true",
            "defaultAction": "false",
            "priority": 1000,
            "config": {}
          }
        ],
        "browserFlow": "browser",
        "registrationFlow": "registration",
        "directGrantFlow": "direct grant",
        "resetCredentialsFlow": "reset credentials",
        "clientAuthenticationFlow": "clients",
        "dockerAuthenticationFlow": "docker auth",
        "attributes": {
          "cibaBackchannelTokenDeliveryMode": "poll",
          "cibaExpiresIn": "120",
          "cibaAuthRequestedUserHint": "login_hint",
          "oauth2DeviceCodeLifespan": "600",
          "oauth2DevicePollingInterval": "5",
          "clientOfflineSessionMaxLifespan": "0",
          "clientSessionIdleTimeout": "0",
          "parRequestUriLifespan": "60",
          "clientSessionMaxLifespan": "0",
          "clientOfflineSessionIdleTimeout": "0",
          "cibaInterval": "5",
          "realmReusableOtpCode": "false"
        },
        "keycloakVersion": "20.0.1",
        "userManagedAccessAllowed": "false",
        "clientProfiles": {
          "profiles": []
        },
        "clientPolicies": {
          "policies": []
        }
      }
