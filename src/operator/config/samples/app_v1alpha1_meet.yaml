apiVersion: app.onet.bigtree.space/v1alpha1
kind: Meet
metadata:
  name: meet-sample
spec:
  # Default values copied from <project_dir>/helm-charts/meet/values.yaml
  backend:
    affinity: {}
    args: []
    command: []
    createsuperuser:
      command:
      - /bin/sh
      - -c
      - |
        python manage.py createsuperuser --email $DJANGO_SUPERUSER_EMAIL --password $DJANGO_SUPERUSER_PASSWORD
      restartPolicy: Never
    dpAnnotations: {}
    envVars: {}
    extraVolumeMounts: []
    extraVolumes: []
    migrate:
      command:
      - python
      - manage.py
      - migrate
      - --no-input
      restartPolicy: Never
    migrateJobAnnotations: {}
    nodeSelector: {}
    pdb:
      enabled: true
    persistence: {}
    podAnnotations: {}
    probes:
      liveness:
        initialDelaySeconds: 30
        path: /__heartbeat__
      readiness:
        initialDelaySeconds: 30
        path: /__lbheartbeat__
    replicas: 3
    resources: {}
    securityContext: null
    service:
      annotations: {}
      port: 80
      targetPort: 8000
      type: ClusterIP
    shareProcessNamespace: false
    sidecars: []
    tolerations: []
  celery:
    affinity: {}
    args: []
    command: []
    dpAnnotations: {}
    envVars: {}
    extraVolumeMounts: []
    extraVolumes: []
    migrateJobAnnotations: {}
    nodeSelector: {}
    pdb:
      enabled: false
    persistence: {}
    podAnnotations: {}
    probes: {}
    replicas: 1
    resources: {}
    securityContext: null
    service:
      annotations: {}
      port: 80
      targetPort: 8000
      type: ClusterIP
    shareProcessNamespace: false
    sidecars: []
    tolerations: []
  commonEnvVars: {}
  frontend:
    affinity: {}
    args: []
    command: []
    dpAnnotations: {}
    envVars: {}
    extraVolumeMounts: []
    extraVolumes: []
    image:
      pullPolicy: IfNotPresent
      repository: lasuite/meet-frontend
      tag: latest
    nodeSelector: {}
    pdb:
      enabled: true
    persistence: {}
    podAnnotations: {}
    probes: {}
    replicas: 3
    resources: {}
    securityContext: null
    service:
      annotations: {}
      port: 80
      targetPort: 8080
      type: ClusterIP
    shareProcessNamespace: false
    sidecars: []
    tolerations: []
  fullnameOverride: ""
  image:
    pullPolicy: IfNotPresent
    repository: lasuite/meet-backend
    tag: latest
  ingress:
    className: null
    customBackends: []
    enabled: false
    host: meet.example.com
    hosts: []
    path: /
    tls:
      additional: []
      enabled: true
  ingressAdmin:
    className: null
    enabled: false
    host: meet.example.com
    hosts: []
    path: /admin
    tls:
      additional: []
      enabled: true
  ingressMedia:
    annotations:
      nginx.ingress.kubernetes.io/auth-response-headers: Authorization, X-Amz-Date,
        X-Amz-Content-SHA256
      nginx.ingress.kubernetes.io/auth-url: https://meet.example.com/api/v1.0/recordings/media-auth/
      nginx.ingress.kubernetes.io/configuration-snippet: |
        add_header Content-Security-Policy "default-src 'none'" always;
      nginx.ingress.kubernetes.io/upstream-vhost: minio.meet.svc.cluster.local:9000
    className: null
    enabled: false
    host: meet.example.com
    hosts: []
    path: /media/(.*)
    tls:
      additional: []
      enabled: true
      secretName: null
  livekit-server:
    autoscaling:
      enabled: false
      maxReplicas: 5
      minReplicas: 1
      targetCPUUtilizationPercentage: 60
    livekit:
      keys:
        devkey: secret
      log_level: debug
      redis:
        address: redis-master:6379
        password: pass
      rtc:
        port_range_end: 60000
        port_range_start: 50000
        tcp_port: 7881
        use_external_ip: false
      turn:
        domain: livekit.onet.bigtree.space
        enabled: true
        loadBalancerAnnotations: {}
        udp_port: 443
    loadBalancer:
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        nginx.ingress.kubernetes.io/rewrite-target: /
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
      tls:
      - hosts:
        - livekit.onet.bigtree.space
        secretName: livekit-tls
      type: nginx
    nodeSelector: {}
    replicaCount: 1
    resources: {}
    terminationGracePeriodSeconds: 18000
  nameOverride: ""
  postgresql:
    auth:
      database: meet
      password: pass
      username: dinum
    fullnameOverride: postgresql
    nameOverride: postgresql
    tls:
      autoGenerated: true
      enabled: true
  posthog:
    assetsService:
      annotations: {}
      externalName: eu-assets.i.posthog.com
      port: 443
      type: ExternalName
    ingress:
      annotations: {}
      className: null
      customBackends: []
      enabled: false
      host: meet.example.com
      hosts: []
      path: /
      tls:
        additional: []
        enabled: true
    ingressAssets:
      annotations: {}
      className: null
      customBackends: []
      enabled: false
      host: meet.example.com
      hosts: []
      path: /static
      tls:
        additional: []
        enabled: true
    service:
      annotations: {}
      externalName: eu.i.posthog.com
      port: 443
      type: ExternalName
  redis:
    architecture: standalone
    auth:
      password: pass
  serviceMedia:
    annotations: {}
    host: minio.meet.svc.cluster.local
    port: 9000
  summary:
    affinity: {}
    args: []
    command: []
    dpAnnotations: {}
    envVars: {}
    extraVolumeMounts: []
    extraVolumes: []
    migrateJobAnnotations: {}
    nodeSelector: {}
    pdb:
      enabled: true
    persistence: {}
    podAnnotations: {}
    probes:
      liveness:
        initialDelaySeconds: 30
        path: /__heartbeat__
      readiness:
        initialDelaySeconds: 30
        path: /__lbheartbeat__
    replicas: 1
    resources: {}
    securityContext: null
    service:
      annotations: {}
      port: 80
      targetPort: 8000
      type: ClusterIP
    shareProcessNamespace: false
    sidecars: []
    tolerations: []
  
  
