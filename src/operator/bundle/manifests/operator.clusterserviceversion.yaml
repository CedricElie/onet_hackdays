apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "app.onet.bigtree.space/v1alpha1",
          "kind": "Impress",
          "metadata": {
            "name": "impress-sample"
          },
          "spec": {
            "backend": {
              "affinity": {},
              "args": [],
              "celery": {
                "args": [
                  "celery",
                  "-A",
                  "impress.celery_app",
                  "worker",
                  "-l",
                  "INFO",
                  "-n",
                  "impress@%h"
                ],
                "command": [],
                "probes": {
                  "liveness": {
                    "exec": {
                      "command": [
                        "/bin/sh",
                        "-c",
                        "celery -A impress.celery_app inspect ping -d impress@$HOSTNAME"
                      ]
                    },
                    "initialDelaySeconds": 60,
                    "timeoutSeconds": 5
                  },
                  "readiness": {
                    "exec": {
                      "command": [
                        "/bin/sh",
                        "-c",
                        "celery -A impress.celery_app inspect ping -d impress@$HOSTNAME"
                      ]
                    },
                    "initialDelaySeconds": 15,
                    "timeoutSeconds": 5
                  }
                },
                "replicas": 1,
                "resources": {}
              },
              "command": [],
              "createsuperuser": {
                "command": [
                  "/bin/sh",
                  "-c",
                  "python manage.py createsuperuser --email $DJANGO_SUPERUSER_EMAIL --password $DJANGO_SUPERUSER_PASSWORD\n"
                ],
                "restartPolicy": "Never"
              },
              "dpAnnotations": {},
              "envVars": {},
              "extraVolumeMounts": [],
              "extraVolumes": [],
              "job": {
                "annotations": {
                  "argocd.argoproj.io/hook": "PostSync"
                },
                "command": [],
                "name": "",
                "restartPolicy": "Never"
              },
              "migrate": {
                "command": [
                  "python",
                  "manage.py",
                  "migrate",
                  "--no-input"
                ],
                "restartPolicy": "Never"
              },
              "migrateJobAnnotations": {},
              "nodeSelector": {},
              "pdb": {
                "enabled": true
              },
              "persistence": {},
              "podAnnotations": {},
              "probes": {
                "liveness": {
                  "initialDelaySeconds": 10,
                  "path": "/__heartbeat__"
                },
                "readiness": {
                  "initialDelaySeconds": 10,
                  "path": "/__lbheartbeat__"
                }
              },
              "replicas": 1,
              "resources": {},
              "securityContext": null,
              "service": {
                "annotations": {},
                "port": 80,
                "targetPort": 8000,
                "type": "ClusterIP"
              },
              "shareProcessNamespace": false,
              "sidecars": [],
              "themeCustomization": {
                "enabled": false,
                "file_content": "",
                "mount_path": "/app/impress/configuration/theme"
              },
              "tolerations": []
            },
            "commonEnvVars": {},
            "frontend": {
              "affinity": {},
              "args": [],
              "command": [],
              "dpAnnotations": {},
              "envVars": {},
              "extraVolumeMounts": [],
              "extraVolumes": [],
              "image": {
                "pullPolicy": "IfNotPresent",
                "repository": "lasuite/impress-frontend",
                "tag": "latest"
              },
              "nodeSelector": {},
              "pdb": {
                "enabled": true
              },
              "persistence": {},
              "podAnnotations": {},
              "probes": {},
              "replicas": 1,
              "resources": {},
              "securityContext": null,
              "service": {
                "annotations": {},
                "port": 80,
                "targetPort": 8080,
                "type": "ClusterIP"
              },
              "shareProcessNamespace": false,
              "sidecars": [],
              "tolerations": []
            },
            "fullnameOverride": "",
            "image": {
              "pullPolicy": "IfNotPresent",
              "repository": "lasuite/impress-backend",
              "tag": "latest"
            },
            "ingress": {
              "className": null,
              "customBackends": [],
              "enabled": false,
              "host": "impress.example.com",
              "hosts": [],
              "path": "/",
              "tls": {
                "additional": [],
                "enabled": true,
                "secretName": null
              }
            },
            "ingressAdmin": {
              "className": null,
              "enabled": false,
              "host": "impress.example.com",
              "hosts": [],
              "path": "/admin",
              "tls": {
                "additional": [],
                "enabled": true,
                "secretName": null
              }
            },
            "ingressCollaborationApi": {
              "annotations": {
                "nginx.ingress.kubernetes.io/upstream-hash-by": "$arg_room"
              },
              "className": null,
              "customBackends": [],
              "enabled": false,
              "host": "impress.example.com",
              "hosts": [],
              "path": "/collaboration/api/",
              "tls": {
                "additional": [],
                "enabled": true,
                "secretName": null
              }
            },
            "ingressCollaborationWS": {
              "annotations": {
                "nginx.ingress.kubernetes.io/enable-websocket": "true",
                "nginx.ingress.kubernetes.io/proxy-read-timeout": "86400",
                "nginx.ingress.kubernetes.io/proxy-send-timeout": "86400",
                "nginx.ingress.kubernetes.io/upstream-hash-by": "$arg_room"
              },
              "className": null,
              "customBackends": [],
              "enabled": false,
              "host": "impress.example.com",
              "hosts": [],
              "path": "/collaboration/ws/",
              "tls": {
                "additional": [],
                "enabled": true,
                "secretName": null
              }
            },
            "ingressMedia": {
              "annotations": {
                "nginx.ingress.kubernetes.io/auth-response-headers": "Authorization, X-Amz-Date, X-Amz-Content-SHA256",
                "nginx.ingress.kubernetes.io/auth-url": "https://impress.example.com/api/v1.0/documents/media-auth/",
                "nginx.ingress.kubernetes.io/configuration-snippet": "add_header Content-Security-Policy \"default-src 'none'\" always;\n",
                "nginx.ingress.kubernetes.io/upstream-vhost": "minio.impress.svc.cluster.local:9000"
              },
              "className": null,
              "enabled": false,
              "host": "impress.example.com",
              "hosts": [],
              "path": "/media/(.*)",
              "tls": {
                "additional": [],
                "enabled": true,
                "secretName": null
              }
            },
            "nameOverride": "",
            "posthog": {
              "assetsService": {
                "annotations": {},
                "externalName": "eu-assets.i.posthog.com",
                "port": 443,
                "type": "ExternalName"
              },
              "ingress": {
                "annotations": {},
                "className": null,
                "customBackends": [],
                "enabled": false,
                "host": "impress.example.com",
                "hosts": [],
                "path": "/",
                "tls": {
                  "additional": [],
                  "enabled": true
                }
              },
              "ingressAssets": {
                "annotations": {},
                "className": null,
                "customBackends": [],
                "enabled": false,
                "host": "impress.example.com",
                "hosts": [],
                "paths": [
                  "/static",
                  "/array"
                ],
                "tls": {
                  "additional": [],
                  "enabled": true
                }
              },
              "service": {
                "annotations": {},
                "externalName": "eu.i.posthog.com",
                "port": 443,
                "type": "ExternalName"
              }
            },
            "serviceMedia": {
              "annotations": {},
              "host": "minio.impress.svc.cluster.local",
              "port": 9000
            },
            "yProvider": {
              "affinity": {},
              "args": [],
              "command": [],
              "dpAnnotations": {},
              "envVars": {},
              "extraVolumeMounts": [],
              "extraVolumes": [],
              "image": {
                "pullPolicy": "IfNotPresent",
                "repository": "lasuite/impress-y-provider",
                "tag": "latest"
              },
              "nodeSelector": {},
              "pdb": {
                "enabled": true
              },
              "persistence": {},
              "podAnnotations": {},
              "probes": {
                "liveness": {
                  "initialDelaySeconds": 10,
                  "path": "/ping"
                }
              },
              "replicas": 1,
              "resources": {},
              "securityContext": null,
              "service": {
                "annotations": {},
                "port": 443,
                "targetPort": 4444,
                "type": "ClusterIP"
              },
              "shareProcessNamespace": false,
              "sidecars": [],
              "tolerations": []
            }
          }
        }
      ]
    capabilities: Basic Install
    createdAt: "2025-06-03T08:21:46Z"
    operators.operatorframework.io/builder: operator-sdk-v1.40.0
    operators.operatorframework.io/project_layout: helm.sdk.operatorframework.io/v1
  name: operator.v0.0.1
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - kind: Impress
      name: impresses.app.onet.bigtree.space
      version: v1alpha1
  description: onet apps
  displayName: onet-operator
  icon:
  - base64data: ""
    mediatype: ""
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
        - apiGroups:
          - app.onet.bigtree.space
          resources:
          - impresses
          - impresses/status
          - impresses/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - batch
          resources:
          - jobs
          verbs:
          - '*'
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - '*'
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: operator-controller-manager
      deployments:
      - label:
          app.kubernetes.io/managed-by: kustomize
          app.kubernetes.io/name: operator
          control-plane: controller-manager
        name: operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              app.kubernetes.io/name: operator
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                app.kubernetes.io/name: operator
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --metrics-require-rbac
                - --metrics-secure
                - --metrics-bind-address=:8443
                - --leader-elect
                - --leader-election-id=operator
                - --health-probe-bind-address=:8081
                image: fperrier/onet-operator:latest
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 10m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              securityContext:
                runAsNonRoot: true
                seccompProfile:
                  type: RuntimeDefault
              serviceAccountName: operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: operator-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - apps
  links:
  - name: Operator
    url: https://operator.domain
  maturity: alpha
  provider:
    name: onet
  version: 0.0.1
